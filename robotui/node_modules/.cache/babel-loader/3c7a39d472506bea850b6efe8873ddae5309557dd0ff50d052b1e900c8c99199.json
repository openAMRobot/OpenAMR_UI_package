{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { AmbientLight } from 'three';\nvar AmbientLightNode = /*#__PURE__*/function (_AnalyticLightNode) {\n  _inherits(AmbientLightNode, _AnalyticLightNode);\n  var _super = _createSuper(AmbientLightNode);\n  function AmbientLightNode() {\n    var light = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, AmbientLightNode);\n    return _super.call(this, light);\n  }\n  _createClass(AmbientLightNode, [{\n    key: \"setup\",\n    value: function setup(_ref) {\n      var context = _ref.context;\n      context.irradiance.addAssign(this.colorNode);\n    }\n  }]);\n  return AmbientLightNode;\n}(AnalyticLightNode);\nexport default AmbientLightNode;\naddNodeClass('AmbientLightNode', AmbientLightNode);\naddLightNode(AmbientLight, AmbientLightNode);","map":{"version":3,"names":["AnalyticLightNode","addLightNode","addNodeClass","AmbientLight","AmbientLightNode","_AnalyticLightNode","_inherits","_super","_createSuper","light","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","setup","_ref","context","irradiance","addAssign","colorNode"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/lighting/AmbientLightNode.js"],"sourcesContent":["import AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { AmbientLight } from 'three';\n\nclass AmbientLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t}\n\n\tsetup( { context } ) {\n\n\t\tcontext.irradiance.addAssign( this.colorNode );\n\n\t}\n\n}\n\nexport default AmbientLightNode;\n\naddNodeClass( 'AmbientLightNode', AmbientLightNode );\n\naddLightNode( AmbientLight, AmbientLightNode );\n"],"mappings":";;;;AAAA,OAAOA,iBAAiB,MAAM,wBAAwB;AACtD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,YAAY,QAAQ,OAAO;AAAC,IAE/BC,gBAAgB,0BAAAC,kBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,kBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAErB,SAAAA,iBAAA,EAA4B;IAAA,IAAfK,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAAAG,eAAA,OAAAT,gBAAA;IAAA,OAAAG,MAAA,CAAAO,IAAA,OAEjBL,KAAK;EAEb;EAACM,YAAA,CAAAX,gBAAA;IAAAY,GAAA;IAAAC,KAAA,EAED,SAAAC,MAAAC,IAAA,EAAqB;MAAA,IAAZC,OAAO,GAAAD,IAAA,CAAPC,OAAO;MAEfA,OAAO,CAACC,UAAU,CAACC,SAAS,CAAE,IAAI,CAACC,SAAU,CAAC;IAE/C;EAAC;EAAA,OAAAnB,gBAAA;AAAA,EAZ6BJ,iBAAiB;AAgBhD,eAAeI,gBAAgB;AAE/BF,YAAY,CAAE,kBAAkB,EAAEE,gBAAiB,CAAC;AAEpDH,YAAY,CAAEE,YAAY,EAAEC,gBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}