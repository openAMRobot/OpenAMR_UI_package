{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { add } from '../math/OperatorNode.js';\nimport { normalWorld } from '../accessors/NormalNode.js';\nimport { positionWorld } from '../accessors/PositionNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\nvar TriplanarTexturesNode = /*#__PURE__*/function (_Node) {\n  _inherits(TriplanarTexturesNode, _Node);\n  var _super = _createSuper(TriplanarTexturesNode);\n  function TriplanarTexturesNode(textureXNode) {\n    var _this;\n    var textureYNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var textureZNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var scaleNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : float(1);\n    var positionNode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : positionWorld;\n    var normalNode = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : normalWorld;\n    _classCallCheck(this, TriplanarTexturesNode);\n    _this = _super.call(this, 'vec4');\n    _this.textureXNode = textureXNode;\n    _this.textureYNode = textureYNode;\n    _this.textureZNode = textureZNode;\n    _this.scaleNode = scaleNode;\n    _this.positionNode = positionNode;\n    _this.normalNode = normalNode;\n    return _this;\n  }\n  _createClass(TriplanarTexturesNode, [{\n    key: \"setup\",\n    value: function setup() {\n      var textureXNode = this.textureXNode,\n        textureYNode = this.textureYNode,\n        textureZNode = this.textureZNode,\n        scaleNode = this.scaleNode,\n        positionNode = this.positionNode,\n        normalNode = this.normalNode;\n\n      // Ref: https://github.com/keijiro/StandardTriplanar\n\n      // Blending factor of triplanar mapping\n      var bf = normalNode.abs().normalize();\n      bf = bf.div(bf.dot(vec3(1.0)));\n\n      // Triplanar mapping\n      var tx = positionNode.yz.mul(scaleNode);\n      var ty = positionNode.zx.mul(scaleNode);\n      var tz = positionNode.xy.mul(scaleNode);\n\n      // Base color\n      var textureX = textureXNode.value;\n      var textureY = textureYNode !== null ? textureYNode.value : textureX;\n      var textureZ = textureZNode !== null ? textureZNode.value : textureX;\n      var cx = texture(textureX, tx).mul(bf.x);\n      var cy = texture(textureY, ty).mul(bf.y);\n      var cz = texture(textureZ, tz).mul(bf.z);\n      return add(cx, cy, cz);\n    }\n  }]);\n  return TriplanarTexturesNode;\n}(Node);\nexport default TriplanarTexturesNode;\nexport var triplanarTextures = nodeProxy(TriplanarTexturesNode);\nexport var triplanarTexture = function triplanarTexture() {\n  return triplanarTextures.apply(void 0, arguments);\n};\naddNodeElement('triplanarTexture', triplanarTexture);\naddNodeClass('TriplanarTexturesNode', TriplanarTexturesNode);","map":{"version":3,"names":["Node","addNodeClass","add","normalWorld","positionWorld","texture","addNodeElement","nodeProxy","float","vec3","TriplanarTexturesNode","_Node","_inherits","_super","_createSuper","textureXNode","_this","textureYNode","arguments","length","undefined","textureZNode","scaleNode","positionNode","normalNode","_classCallCheck","call","_createClass","key","value","setup","bf","abs","normalize","div","dot","tx","yz","mul","ty","zx","tz","xy","textureX","textureY","textureZ","cx","x","cy","y","cz","z","triplanarTextures","triplanarTexture","apply"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/utils/TriplanarTexturesNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { add } from '../math/OperatorNode.js';\nimport { normalWorld } from '../accessors/NormalNode.js';\nimport { positionWorld } from '../accessors/PositionNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass TriplanarTexturesNode extends Node {\n\n\tconstructor( textureXNode, textureYNode = null, textureZNode = null, scaleNode = float( 1 ), positionNode = positionWorld, normalNode = normalWorld ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.textureXNode = textureXNode;\n\t\tthis.textureYNode = textureYNode;\n\t\tthis.textureZNode = textureZNode;\n\n\t\tthis.scaleNode = scaleNode;\n\n\t\tthis.positionNode = positionNode;\n\t\tthis.normalNode = normalNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { textureXNode, textureYNode, textureZNode, scaleNode, positionNode, normalNode } = this;\n\n\t\t// Ref: https://github.com/keijiro/StandardTriplanar\n\n\t\t// Blending factor of triplanar mapping\n\t\tlet bf = normalNode.abs().normalize();\n\t\tbf = bf.div( bf.dot( vec3( 1.0 ) ) );\n\n\t\t// Triplanar mapping\n\t\tconst tx = positionNode.yz.mul( scaleNode );\n\t\tconst ty = positionNode.zx.mul( scaleNode );\n\t\tconst tz = positionNode.xy.mul( scaleNode );\n\n\t\t// Base color\n\t\tconst textureX = textureXNode.value;\n\t\tconst textureY = textureYNode !== null ? textureYNode.value : textureX;\n\t\tconst textureZ = textureZNode !== null ? textureZNode.value : textureX;\n\n\t\tconst cx = texture( textureX, tx ).mul( bf.x );\n\t\tconst cy = texture( textureY, ty ).mul( bf.y );\n\t\tconst cz = texture( textureZ, tz ).mul( bf.z );\n\n\t\treturn add( cx, cy, cz );\n\n\t}\n\n}\n\nexport default TriplanarTexturesNode;\n\nexport const triplanarTextures = nodeProxy( TriplanarTexturesNode );\nexport const triplanarTexture = ( ...params ) => triplanarTextures( ...params );\n\naddNodeElement( 'triplanarTexture', triplanarTexture );\n\naddNodeClass( 'TriplanarTexturesNode', TriplanarTexturesNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}