{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { getDistanceAttenuation } from './LightUtils.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { objectViewPosition } from '../accessors/Object3DNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { SpotLight } from 'three';\nvar SpotLightNode = /*#__PURE__*/function (_AnalyticLightNode) {\n  _inherits(SpotLightNode, _AnalyticLightNode);\n  var _super = _createSuper(SpotLightNode);\n  function SpotLightNode() {\n    var _this;\n    var light = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, SpotLightNode);\n    _this = _super.call(this, light);\n    _this.coneCosNode = uniform(0);\n    _this.penumbraCosNode = uniform(0);\n    _this.cutoffDistanceNode = uniform(0);\n    _this.decayExponentNode = uniform(0);\n    return _this;\n  }\n  _createClass(SpotLightNode, [{\n    key: \"update\",\n    value: function update(frame) {\n      _get(_getPrototypeOf(SpotLightNode.prototype), \"update\", this).call(this, frame);\n      var light = this.light;\n      this.coneCosNode.value = Math.cos(light.angle);\n      this.penumbraCosNode.value = Math.cos(light.angle * (1 - light.penumbra));\n      this.cutoffDistanceNode.value = light.distance;\n      this.decayExponentNode.value = light.decay;\n    }\n  }, {\n    key: \"getSpotAttenuation\",\n    value: function getSpotAttenuation(angleCosine) {\n      var coneCosNode = this.coneCosNode,\n        penumbraCosNode = this.penumbraCosNode;\n      return smoothstep(coneCosNode, penumbraCosNode, angleCosine);\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      _get(_getPrototypeOf(SpotLightNode.prototype), \"setup\", this).call(this, builder);\n      var lightingModel = builder.context.lightingModel;\n      var colorNode = this.colorNode,\n        cutoffDistanceNode = this.cutoffDistanceNode,\n        decayExponentNode = this.decayExponentNode,\n        light = this.light;\n      var lVector = objectViewPosition(light).sub(positionView); // @TODO: Add it into LightNode\n\n      var lightDirection = lVector.normalize();\n      var angleCos = lightDirection.dot(lightTargetDirection(light));\n      var spotAttenuation = this.getSpotAttenuation(angleCos);\n      var lightDistance = lVector.length();\n      var lightAttenuation = getDistanceAttenuation({\n        lightDistance: lightDistance,\n        cutoffDistance: cutoffDistanceNode,\n        decayExponent: decayExponentNode\n      });\n      var lightColor = colorNode.mul(spotAttenuation).mul(lightAttenuation);\n      var reflectedLight = builder.context.reflectedLight;\n      lightingModel.direct({\n        lightDirection: lightDirection,\n        lightColor: lightColor,\n        reflectedLight: reflectedLight\n      });\n    }\n  }]);\n  return SpotLightNode;\n}(AnalyticLightNode);\nexport default SpotLightNode;\naddNodeClass('SpotLightNode', SpotLightNode);\naddLightNode(SpotLight, SpotLightNode);","map":{"version":3,"names":["AnalyticLightNode","lightTargetDirection","addLightNode","getDistanceAttenuation","uniform","smoothstep","objectViewPosition","positionView","addNodeClass","SpotLight","SpotLightNode","_AnalyticLightNode","_inherits","_super","_createSuper","_this","light","arguments","length","undefined","_classCallCheck","call","coneCosNode","penumbraCosNode","cutoffDistanceNode","decayExponentNode","_createClass","key","value","update","frame","_get","_getPrototypeOf","prototype","Math","cos","angle","penumbra","distance","decay","getSpotAttenuation","angleCosine","setup","builder","lightingModel","context","colorNode","lVector","sub","lightDirection","normalize","angleCos","dot","spotAttenuation","lightDistance","lightAttenuation","cutoffDistance","decayExponent","lightColor","mul","reflectedLight","direct"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/lighting/SpotLightNode.js"],"sourcesContent":["import AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { getDistanceAttenuation } from './LightUtils.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { objectViewPosition } from '../accessors/Object3DNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { SpotLight } from 'three';\n\nclass SpotLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.coneCosNode = uniform( 0 );\n\t\tthis.penumbraCosNode = uniform( 0 );\n\n\t\tthis.cutoffDistanceNode = uniform( 0 );\n\t\tthis.decayExponentNode = uniform( 0 );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tsuper.update( frame );\n\n\t\tconst { light } = this;\n\n\t\tthis.coneCosNode.value = Math.cos( light.angle );\n\t\tthis.penumbraCosNode.value = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\n\t\tthis.cutoffDistanceNode.value = light.distance;\n\t\tthis.decayExponentNode.value = light.decay;\n\n\t}\n\n\tgetSpotAttenuation( angleCosine ) {\n\n\t\tconst { coneCosNode, penumbraCosNode } = this;\n\n\t\treturn smoothstep( coneCosNode, penumbraCosNode, angleCosine );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst lightingModel = builder.context.lightingModel;\n\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\n\n\t\tconst lVector = objectViewPosition( light ).sub( positionView ); // @TODO: Add it into LightNode\n\n\t\tconst lightDirection = lVector.normalize();\n\t\tconst angleCos = lightDirection.dot( lightTargetDirection( light ) );\n\t\tconst spotAttenuation = this.getSpotAttenuation( angleCos );\n\n\t\tconst lightDistance = lVector.length();\n\n\t\tconst lightAttenuation = getDistanceAttenuation( {\n\t\t\tlightDistance,\n\t\t\tcutoffDistance: cutoffDistanceNode,\n\t\t\tdecayExponent: decayExponentNode\n\t\t} );\n\n\t\tconst lightColor = colorNode.mul( spotAttenuation ).mul( lightAttenuation );\n\n\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\tlightingModel.direct( {\n\t\t\tlightDirection,\n\t\t\tlightColor,\n\t\t\treflectedLight\n\t\t} );\n\n\t}\n\n}\n\nexport default SpotLightNode;\n\naddNodeClass( 'SpotLightNode', SpotLightNode );\n\naddLightNode( SpotLight, SpotLightNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}