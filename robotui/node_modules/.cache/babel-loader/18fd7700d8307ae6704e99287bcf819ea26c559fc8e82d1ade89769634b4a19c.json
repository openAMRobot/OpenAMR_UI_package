{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from '../core/TempNode.js';\nimport { sub, mul, div } from './OperatorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeObject, nodeProxy, float, vec3, vec4 } from '../shadernode/ShaderNode.js';\nvar MathNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(MathNode, _TempNode);\n  var _super = _createSuper(MathNode);\n  function MathNode(method, aNode) {\n    var _this;\n    var bNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var cNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, MathNode);\n    _this = _super.call(this);\n    _this.method = method;\n    _this.aNode = aNode;\n    _this.bNode = bNode;\n    _this.cNode = cNode;\n    return _this;\n  }\n  _createClass(MathNode, [{\n    key: \"getInputType\",\n    value: function getInputType(builder) {\n      var aType = this.aNode.getNodeType(builder);\n      var bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n      var cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n      var aLen = builder.isMatrix(aType) ? 0 : builder.getTypeLength(aType);\n      var bLen = builder.isMatrix(bType) ? 0 : builder.getTypeLength(bType);\n      var cLen = builder.isMatrix(cType) ? 0 : builder.getTypeLength(cType);\n      if (aLen > bLen && aLen > cLen) {\n        return aType;\n      } else if (bLen > cLen) {\n        return bType;\n      } else if (cLen > aLen) {\n        return cType;\n      }\n      return aType;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var method = this.method;\n      if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n        return 'float';\n      } else if (method === MathNode.CROSS) {\n        return 'vec3';\n      } else {\n        return this.getInputType(builder);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var method = this.method;\n      var type = this.getNodeType(builder);\n      var inputType = this.getInputType(builder);\n      var a = this.aNode;\n      var b = this.bNode;\n      var c = this.cNode;\n      var isWebGL = builder.renderer.isWebGLRenderer === true;\n      if (method === MathNode.TRANSFORM_DIRECTION) {\n        // dir can be either a direction vector or a normal vector\n        // upper-left 3x3 of matrix is assumed to be orthogonal\n\n        var tA = a;\n        var tB = b;\n        if (builder.isMatrix(tA.getNodeType(builder))) {\n          tB = vec4(vec3(tB), 0.0);\n        } else {\n          tA = vec4(vec3(tA), 0.0);\n        }\n        var mulNode = mul(tA, tB).xyz;\n        return normalize(mulNode).build(builder, output);\n      } else if (method === MathNode.NEGATE) {\n        return builder.format('( - ' + a.build(builder, inputType) + ' )', type, output);\n      } else if (method === MathNode.ONE_MINUS) {\n        return sub(1.0, a).build(builder, output);\n      } else if (method === MathNode.RECIPROCAL) {\n        return div(1.0, a).build(builder, output);\n      } else if (method === MathNode.DIFFERENCE) {\n        return abs(sub(a, b)).build(builder, output);\n      } else {\n        var params = [];\n        if (method === MathNode.CROSS) {\n          params.push(a.build(builder, type), b.build(builder, type));\n        } else if (method === MathNode.STEP) {\n          params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n        } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n          params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n        } else if (method === MathNode.REFRACT) {\n          params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n        } else if (method === MathNode.MIX) {\n          params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n        } else {\n          params.push(a.build(builder, inputType));\n          if (b !== null) params.push(b.build(builder, inputType));\n          if (c !== null) params.push(c.build(builder, inputType));\n        }\n        return builder.format(\"\".concat(builder.getMethod(method), \"( \").concat(params.join(', '), \" )\"), type, output);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(MathNode.prototype), \"serialize\", this).call(this, data);\n      data.method = this.method;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(MathNode.prototype), \"deserialize\", this).call(this, data);\n      this.method = data.method;\n    }\n  }]);\n  return MathNode;\n}(TempNode); // 1 input\nMathNode.RADIANS = 'radians';\nMathNode.DEGREES = 'degrees';\nMathNode.EXP = 'exp';\nMathNode.EXP2 = 'exp2';\nMathNode.LOG = 'log';\nMathNode.LOG2 = 'log2';\nMathNode.SQRT = 'sqrt';\nMathNode.INVERSE_SQRT = 'inversesqrt';\nMathNode.FLOOR = 'floor';\nMathNode.CEIL = 'ceil';\nMathNode.NORMALIZE = 'normalize';\nMathNode.FRACT = 'fract';\nMathNode.SIN = 'sin';\nMathNode.COS = 'cos';\nMathNode.TAN = 'tan';\nMathNode.ASIN = 'asin';\nMathNode.ACOS = 'acos';\nMathNode.ATAN = 'atan';\nMathNode.ABS = 'abs';\nMathNode.SIGN = 'sign';\nMathNode.LENGTH = 'length';\nMathNode.NEGATE = 'negate';\nMathNode.ONE_MINUS = 'oneMinus';\nMathNode.DFDX = 'dFdx';\nMathNode.DFDY = 'dFdy';\nMathNode.ROUND = 'round';\nMathNode.RECIPROCAL = 'reciprocal';\nMathNode.TRUNC = 'trunc';\nMathNode.FWIDTH = 'fwidth';\n\n// 2 inputs\n\nMathNode.ATAN2 = 'atan2';\nMathNode.MIN = 'min';\nMathNode.MAX = 'max';\nMathNode.MOD = 'mod';\nMathNode.STEP = 'step';\nMathNode.REFLECT = 'reflect';\nMathNode.DISTANCE = 'distance';\nMathNode.DIFFERENCE = 'difference';\nMathNode.DOT = 'dot';\nMathNode.CROSS = 'cross';\nMathNode.POW = 'pow';\nMathNode.TRANSFORM_DIRECTION = 'transformDirection';\n\n// 3 inputs\n\nMathNode.MIX = 'mix';\nMathNode.CLAMP = 'clamp';\nMathNode.REFRACT = 'refract';\nMathNode.SMOOTHSTEP = 'smoothstep';\nMathNode.FACEFORWARD = 'faceforward';\nexport default MathNode;\nexport var EPSILON = float(1e-6);\nexport var INFINITY = float(1e6);\nexport var radians = nodeProxy(MathNode, MathNode.RADIANS);\nexport var degrees = nodeProxy(MathNode, MathNode.DEGREES);\nexport var exp = nodeProxy(MathNode, MathNode.EXP);\nexport var exp2 = nodeProxy(MathNode, MathNode.EXP2);\nexport var log = nodeProxy(MathNode, MathNode.LOG);\nexport var log2 = nodeProxy(MathNode, MathNode.LOG2);\nexport var sqrt = nodeProxy(MathNode, MathNode.SQRT);\nexport var inverseSqrt = nodeProxy(MathNode, MathNode.INVERSE_SQRT);\nexport var floor = nodeProxy(MathNode, MathNode.FLOOR);\nexport var ceil = nodeProxy(MathNode, MathNode.CEIL);\nexport var normalize = nodeProxy(MathNode, MathNode.NORMALIZE);\nexport var fract = nodeProxy(MathNode, MathNode.FRACT);\nexport var sin = nodeProxy(MathNode, MathNode.SIN);\nexport var cos = nodeProxy(MathNode, MathNode.COS);\nexport var tan = nodeProxy(MathNode, MathNode.TAN);\nexport var asin = nodeProxy(MathNode, MathNode.ASIN);\nexport var acos = nodeProxy(MathNode, MathNode.ACOS);\nexport var atan = nodeProxy(MathNode, MathNode.ATAN);\nexport var abs = nodeProxy(MathNode, MathNode.ABS);\nexport var sign = nodeProxy(MathNode, MathNode.SIGN);\nexport var length = nodeProxy(MathNode, MathNode.LENGTH);\nexport var negate = nodeProxy(MathNode, MathNode.NEGATE);\nexport var oneMinus = nodeProxy(MathNode, MathNode.ONE_MINUS);\nexport var dFdx = nodeProxy(MathNode, MathNode.DFDX);\nexport var dFdy = nodeProxy(MathNode, MathNode.DFDY);\nexport var round = nodeProxy(MathNode, MathNode.ROUND);\nexport var reciprocal = nodeProxy(MathNode, MathNode.RECIPROCAL);\nexport var trunc = nodeProxy(MathNode, MathNode.TRUNC);\nexport var fwidth = nodeProxy(MathNode, MathNode.FWIDTH);\nexport var atan2 = nodeProxy(MathNode, MathNode.ATAN2);\nexport var min = nodeProxy(MathNode, MathNode.MIN);\nexport var max = nodeProxy(MathNode, MathNode.MAX);\nexport var mod = nodeProxy(MathNode, MathNode.MOD);\nexport var step = nodeProxy(MathNode, MathNode.STEP);\nexport var reflect = nodeProxy(MathNode, MathNode.REFLECT);\nexport var distance = nodeProxy(MathNode, MathNode.DISTANCE);\nexport var difference = nodeProxy(MathNode, MathNode.DIFFERENCE);\nexport var dot = nodeProxy(MathNode, MathNode.DOT);\nexport var cross = nodeProxy(MathNode, MathNode.CROSS);\nexport var pow = nodeProxy(MathNode, MathNode.POW);\nexport var pow2 = nodeProxy(MathNode, MathNode.POW, 2);\nexport var pow3 = nodeProxy(MathNode, MathNode.POW, 3);\nexport var pow4 = nodeProxy(MathNode, MathNode.POW, 4);\nexport var transformDirection = nodeProxy(MathNode, MathNode.TRANSFORM_DIRECTION);\nexport var mix = nodeProxy(MathNode, MathNode.MIX);\nexport var clamp = function clamp(value) {\n  var low = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var high = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return nodeObject(new MathNode(MathNode.CLAMP, nodeObject(value), nodeObject(low), nodeObject(high)));\n};\nexport var saturate = function saturate(value) {\n  return clamp(value);\n};\nexport var refract = nodeProxy(MathNode, MathNode.REFRACT);\nexport var smoothstep = nodeProxy(MathNode, MathNode.SMOOTHSTEP);\nexport var faceForward = nodeProxy(MathNode, MathNode.FACEFORWARD);\nexport var mixElement = function mixElement(t, e1, e2) {\n  return mix(e1, e2, t);\n};\nexport var smoothstepElement = function smoothstepElement(x, low, high) {\n  return smoothstep(low, high, x);\n};\naddNodeElement('radians', radians);\naddNodeElement('degrees', degrees);\naddNodeElement('exp', exp);\naddNodeElement('exp2', exp2);\naddNodeElement('log', log);\naddNodeElement('log2', log2);\naddNodeElement('sqrt', sqrt);\naddNodeElement('inverseSqrt', inverseSqrt);\naddNodeElement('floor', floor);\naddNodeElement('ceil', ceil);\naddNodeElement('normalize', normalize);\naddNodeElement('fract', fract);\naddNodeElement('sin', sin);\naddNodeElement('cos', cos);\naddNodeElement('tan', tan);\naddNodeElement('asin', asin);\naddNodeElement('acos', acos);\naddNodeElement('atan', atan);\naddNodeElement('abs', abs);\naddNodeElement('sign', sign);\naddNodeElement('length', length);\naddNodeElement('negate', negate);\naddNodeElement('oneMinus', oneMinus);\naddNodeElement('dFdx', dFdx);\naddNodeElement('dFdy', dFdy);\naddNodeElement('round', round);\naddNodeElement('reciprocal', reciprocal);\naddNodeElement('trunc', trunc);\naddNodeElement('fwidth', fwidth);\naddNodeElement('atan2', atan2);\naddNodeElement('min', min);\naddNodeElement('max', max);\naddNodeElement('mod', mod);\naddNodeElement('step', step);\naddNodeElement('reflect', reflect);\naddNodeElement('distance', distance);\naddNodeElement('dot', dot);\naddNodeElement('cross', cross);\naddNodeElement('pow', pow);\naddNodeElement('pow2', pow2);\naddNodeElement('pow3', pow3);\naddNodeElement('pow4', pow4);\naddNodeElement('transformDirection', transformDirection);\naddNodeElement('mix', mixElement);\naddNodeElement('clamp', clamp);\naddNodeElement('refract', refract);\naddNodeElement('smoothstep', smoothstepElement);\naddNodeElement('faceForward', faceForward);\naddNodeElement('difference', difference);\naddNodeElement('saturate', saturate);\naddNodeClass('MathNode', MathNode);","map":{"version":3,"names":["TempNode","sub","mul","div","addNodeClass","addNodeElement","nodeObject","nodeProxy","float","vec3","vec4","MathNode","_TempNode","_inherits","_super","_createSuper","method","aNode","_this","bNode","arguments","length","undefined","cNode","_classCallCheck","call","_createClass","key","value","getInputType","builder","aType","getNodeType","bType","cType","aLen","isMatrix","getTypeLength","bLen","cLen","LENGTH","DISTANCE","DOT","CROSS","generate","output","type","inputType","a","b","c","isWebGL","renderer","isWebGLRenderer","TRANSFORM_DIRECTION","tA","tB","mulNode","xyz","normalize","build","NEGATE","format","ONE_MINUS","RECIPROCAL","DIFFERENCE","abs","params","push","STEP","MIN","MAX","MOD","REFRACT","MIX","concat","getMethod","join","serialize","data","_get","_getPrototypeOf","prototype","deserialize","RADIANS","DEGREES","EXP","EXP2","LOG","LOG2","SQRT","INVERSE_SQRT","FLOOR","CEIL","NORMALIZE","FRACT","SIN","COS","TAN","ASIN","ACOS","ATAN","ABS","SIGN","DFDX","DFDY","ROUND","TRUNC","FWIDTH","ATAN2","REFLECT","POW","CLAMP","SMOOTHSTEP","FACEFORWARD","EPSILON","INFINITY","radians","degrees","exp","exp2","log","log2","sqrt","inverseSqrt","floor","ceil","fract","sin","cos","tan","asin","acos","atan","sign","negate","oneMinus","dFdx","dFdy","round","reciprocal","trunc","fwidth","atan2","min","max","mod","step","reflect","distance","difference","dot","cross","pow","pow2","pow3","pow4","transformDirection","mix","clamp","low","high","saturate","refract","smoothstep","faceForward","mixElement","t","e1","e2","smoothstepElement","x"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/math/MathNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { sub, mul, div } from './OperatorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeObject, nodeProxy, float, vec3, vec4 } from '../shadernode/ShaderNode.js';\n\nclass MathNode extends TempNode {\n\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\t\tthis.cNode = cNode;\n\n\t}\n\n\tgetInputType( builder ) {\n\n\t\tconst aType = this.aNode.getNodeType( builder );\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\n\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\n\n\t\tif ( aLen > bLen && aLen > cLen ) {\n\n\t\t\treturn aType;\n\n\t\t} else if ( bLen > cLen ) {\n\n\t\t\treturn bType;\n\n\t\t} else if ( cLen > aLen ) {\n\n\t\t\treturn cType;\n\n\t\t}\n\n\t\treturn aType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst method = this.method;\n\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\n\n\t\t\treturn 'float';\n\n\t\t} else if ( method === MathNode.CROSS ) {\n\n\t\t\treturn 'vec3';\n\n\t\t} else {\n\n\t\t\treturn this.getInputType( builder );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst method = this.method;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst inputType = this.getInputType( builder );\n\n\t\tconst a = this.aNode;\n\t\tconst b = this.bNode;\n\t\tconst c = this.cNode;\n\n\t\tconst isWebGL = builder.renderer.isWebGLRenderer === true;\n\n\t\tif ( method === MathNode.TRANSFORM_DIRECTION ) {\n\n\t\t\t// dir can be either a direction vector or a normal vector\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\t\t\tlet tA = a;\n\t\t\tlet tB = b;\n\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\n\n\t\t\t\ttB = vec4( vec3( tB ), 0.0 );\n\n\t\t\t} else {\n\n\t\t\t\ttA = vec4( vec3( tA ), 0.0 );\n\n\t\t\t}\n\n\t\t\tconst mulNode = mul( tA, tB ).xyz;\n\n\t\t\treturn normalize( mulNode ).build( builder, output );\n\n\t\t} else if ( method === MathNode.NEGATE ) {\n\n\t\t\treturn builder.format( '( - ' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else if ( method === MathNode.ONE_MINUS ) {\n\n\t\t\treturn sub( 1.0, a ).build( builder, output );\n\n\t\t} else if ( method === MathNode.RECIPROCAL ) {\n\n\t\t\treturn div( 1.0, a ).build( builder, output );\n\n\t\t} else if ( method === MathNode.DIFFERENCE ) {\n\n\t\t\treturn abs( sub( a, b ) ).build( builder, output );\n\n\t\t} else {\n\n\t\t\tconst params = [];\n\n\t\t\tif ( method === MathNode.CROSS ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, type ),\n\t\t\t\t\tb.build( builder, type )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.STEP ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\n\t\t\t\t\tb.build( builder, inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( ( isWebGL && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.REFRACT ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, 'float' )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.MIX ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tparams.push( a.build( builder, inputType ) );\n\t\t\t\tif ( b !== null ) params.push( b.build( builder, inputType ) );\n\t\t\t\tif ( c !== null ) params.push( c.build( builder, inputType ) );\n\n\t\t\t}\n\n\t\t\treturn builder.format( `${ builder.getMethod( method ) }( ${params.join( ', ' )} )`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\n// 1 input\n\nMathNode.RADIANS = 'radians';\nMathNode.DEGREES = 'degrees';\nMathNode.EXP = 'exp';\nMathNode.EXP2 = 'exp2';\nMathNode.LOG = 'log';\nMathNode.LOG2 = 'log2';\nMathNode.SQRT = 'sqrt';\nMathNode.INVERSE_SQRT = 'inversesqrt';\nMathNode.FLOOR = 'floor';\nMathNode.CEIL = 'ceil';\nMathNode.NORMALIZE = 'normalize';\nMathNode.FRACT = 'fract';\nMathNode.SIN = 'sin';\nMathNode.COS = 'cos';\nMathNode.TAN = 'tan';\nMathNode.ASIN = 'asin';\nMathNode.ACOS = 'acos';\nMathNode.ATAN = 'atan';\nMathNode.ABS = 'abs';\nMathNode.SIGN = 'sign';\nMathNode.LENGTH = 'length';\nMathNode.NEGATE = 'negate';\nMathNode.ONE_MINUS = 'oneMinus';\nMathNode.DFDX = 'dFdx';\nMathNode.DFDY = 'dFdy';\nMathNode.ROUND = 'round';\nMathNode.RECIPROCAL = 'reciprocal';\nMathNode.TRUNC = 'trunc';\nMathNode.FWIDTH = 'fwidth';\n\n// 2 inputs\n\nMathNode.ATAN2 = 'atan2';\nMathNode.MIN = 'min';\nMathNode.MAX = 'max';\nMathNode.MOD = 'mod';\nMathNode.STEP = 'step';\nMathNode.REFLECT = 'reflect';\nMathNode.DISTANCE = 'distance';\nMathNode.DIFFERENCE = 'difference';\nMathNode.DOT = 'dot';\nMathNode.CROSS = 'cross';\nMathNode.POW = 'pow';\nMathNode.TRANSFORM_DIRECTION = 'transformDirection';\n\n// 3 inputs\n\nMathNode.MIX = 'mix';\nMathNode.CLAMP = 'clamp';\nMathNode.REFRACT = 'refract';\nMathNode.SMOOTHSTEP = 'smoothstep';\nMathNode.FACEFORWARD = 'faceforward';\n\nexport default MathNode;\n\nexport const EPSILON = float( 1e-6 );\nexport const INFINITY = float( 1e6 );\n\nexport const radians = nodeProxy( MathNode, MathNode.RADIANS );\nexport const degrees = nodeProxy( MathNode, MathNode.DEGREES );\nexport const exp = nodeProxy( MathNode, MathNode.EXP );\nexport const exp2 = nodeProxy( MathNode, MathNode.EXP2 );\nexport const log = nodeProxy( MathNode, MathNode.LOG );\nexport const log2 = nodeProxy( MathNode, MathNode.LOG2 );\nexport const sqrt = nodeProxy( MathNode, MathNode.SQRT );\nexport const inverseSqrt = nodeProxy( MathNode, MathNode.INVERSE_SQRT );\nexport const floor = nodeProxy( MathNode, MathNode.FLOOR );\nexport const ceil = nodeProxy( MathNode, MathNode.CEIL );\nexport const normalize = nodeProxy( MathNode, MathNode.NORMALIZE );\nexport const fract = nodeProxy( MathNode, MathNode.FRACT );\nexport const sin = nodeProxy( MathNode, MathNode.SIN );\nexport const cos = nodeProxy( MathNode, MathNode.COS );\nexport const tan = nodeProxy( MathNode, MathNode.TAN );\nexport const asin = nodeProxy( MathNode, MathNode.ASIN );\nexport const acos = nodeProxy( MathNode, MathNode.ACOS );\nexport const atan = nodeProxy( MathNode, MathNode.ATAN );\nexport const abs = nodeProxy( MathNode, MathNode.ABS );\nexport const sign = nodeProxy( MathNode, MathNode.SIGN );\nexport const length = nodeProxy( MathNode, MathNode.LENGTH );\nexport const negate = nodeProxy( MathNode, MathNode.NEGATE );\nexport const oneMinus = nodeProxy( MathNode, MathNode.ONE_MINUS );\nexport const dFdx = nodeProxy( MathNode, MathNode.DFDX );\nexport const dFdy = nodeProxy( MathNode, MathNode.DFDY );\nexport const round = nodeProxy( MathNode, MathNode.ROUND );\nexport const reciprocal = nodeProxy( MathNode, MathNode.RECIPROCAL );\nexport const trunc = nodeProxy( MathNode, MathNode.TRUNC );\nexport const fwidth = nodeProxy( MathNode, MathNode.FWIDTH );\n\nexport const atan2 = nodeProxy( MathNode, MathNode.ATAN2 );\nexport const min = nodeProxy( MathNode, MathNode.MIN );\nexport const max = nodeProxy( MathNode, MathNode.MAX );\nexport const mod = nodeProxy( MathNode, MathNode.MOD );\nexport const step = nodeProxy( MathNode, MathNode.STEP );\nexport const reflect = nodeProxy( MathNode, MathNode.REFLECT );\nexport const distance = nodeProxy( MathNode, MathNode.DISTANCE );\nexport const difference = nodeProxy( MathNode, MathNode.DIFFERENCE );\nexport const dot = nodeProxy( MathNode, MathNode.DOT );\nexport const cross = nodeProxy( MathNode, MathNode.CROSS );\nexport const pow = nodeProxy( MathNode, MathNode.POW );\nexport const pow2 = nodeProxy( MathNode, MathNode.POW, 2 );\nexport const pow3 = nodeProxy( MathNode, MathNode.POW, 3 );\nexport const pow4 = nodeProxy( MathNode, MathNode.POW, 4 );\nexport const transformDirection = nodeProxy( MathNode, MathNode.TRANSFORM_DIRECTION );\n\nexport const mix = nodeProxy( MathNode, MathNode.MIX );\nexport const clamp = ( value, low = 0, high = 1 ) => nodeObject( new MathNode( MathNode.CLAMP, nodeObject( value ), nodeObject( low ), nodeObject( high ) ) );\nexport const saturate = ( value ) => clamp( value );\nexport const refract = nodeProxy( MathNode, MathNode.REFRACT );\nexport const smoothstep = nodeProxy( MathNode, MathNode.SMOOTHSTEP );\nexport const faceForward = nodeProxy( MathNode, MathNode.FACEFORWARD );\n\nexport const mixElement = ( t, e1, e2 ) => mix( e1, e2, t );\nexport const smoothstepElement = ( x, low, high ) => smoothstep( low, high, x );\n\naddNodeElement( 'radians', radians );\naddNodeElement( 'degrees', degrees );\naddNodeElement( 'exp', exp );\naddNodeElement( 'exp2', exp2 );\naddNodeElement( 'log', log );\naddNodeElement( 'log2', log2 );\naddNodeElement( 'sqrt', sqrt );\naddNodeElement( 'inverseSqrt', inverseSqrt );\naddNodeElement( 'floor', floor );\naddNodeElement( 'ceil', ceil );\naddNodeElement( 'normalize', normalize );\naddNodeElement( 'fract', fract );\naddNodeElement( 'sin', sin );\naddNodeElement( 'cos', cos );\naddNodeElement( 'tan', tan );\naddNodeElement( 'asin', asin );\naddNodeElement( 'acos', acos );\naddNodeElement( 'atan', atan );\naddNodeElement( 'abs', abs );\naddNodeElement( 'sign', sign );\naddNodeElement( 'length', length );\naddNodeElement( 'negate', negate );\naddNodeElement( 'oneMinus', oneMinus );\naddNodeElement( 'dFdx', dFdx );\naddNodeElement( 'dFdy', dFdy );\naddNodeElement( 'round', round );\naddNodeElement( 'reciprocal', reciprocal );\naddNodeElement( 'trunc', trunc );\naddNodeElement( 'fwidth', fwidth );\naddNodeElement( 'atan2', atan2 );\naddNodeElement( 'min', min );\naddNodeElement( 'max', max );\naddNodeElement( 'mod', mod );\naddNodeElement( 'step', step );\naddNodeElement( 'reflect', reflect );\naddNodeElement( 'distance', distance );\naddNodeElement( 'dot', dot );\naddNodeElement( 'cross', cross );\naddNodeElement( 'pow', pow );\naddNodeElement( 'pow2', pow2 );\naddNodeElement( 'pow3', pow3 );\naddNodeElement( 'pow4', pow4 );\naddNodeElement( 'transformDirection', transformDirection );\naddNodeElement( 'mix', mixElement );\naddNodeElement( 'clamp', clamp );\naddNodeElement( 'refract', refract );\naddNodeElement( 'smoothstep', smoothstepElement );\naddNodeElement( 'faceForward', faceForward );\naddNodeElement( 'difference', difference );\naddNodeElement( 'saturate', saturate );\n\naddNodeClass( 'MathNode', MathNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}