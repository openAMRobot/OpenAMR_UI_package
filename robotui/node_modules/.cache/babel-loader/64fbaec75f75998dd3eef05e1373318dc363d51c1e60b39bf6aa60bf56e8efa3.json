{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from './Node.js';\nimport { varying } from './VaryingNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nvar IndexNode = /*#__PURE__*/function (_Node) {\n  _inherits(IndexNode, _Node);\n  var _super = _createSuper(IndexNode);\n  function IndexNode(scope) {\n    var _this;\n    _classCallCheck(this, IndexNode);\n    _this = _super.call(this, 'uint');\n    _this.scope = scope;\n    _this.isInstanceIndexNode = true;\n    return _this;\n  }\n  _createClass(IndexNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var nodeType = this.getNodeType(builder);\n      var scope = this.scope;\n      var propertyName;\n      if (scope === IndexNode.VERTEX) {\n        propertyName = builder.getVertexIndex();\n      } else if (scope === IndexNode.INSTANCE) {\n        propertyName = builder.getInstanceIndex();\n      } else {\n        throw new Error('THREE.IndexNode: Unknown scope: ' + scope);\n      }\n      var output;\n      if (builder.shaderStage === 'vertex' || builder.shaderStage === 'compute') {\n        output = propertyName;\n      } else {\n        var nodeVarying = varying(this);\n        output = nodeVarying.build(builder, nodeType);\n      }\n      return output;\n    }\n  }]);\n  return IndexNode;\n}(Node);\nIndexNode.VERTEX = 'vertex';\nIndexNode.INSTANCE = 'instance';\nexport default IndexNode;\nexport var vertexIndex = nodeImmutable(IndexNode, IndexNode.VERTEX);\nexport var instanceIndex = nodeImmutable(IndexNode, IndexNode.INSTANCE);\naddNodeClass('IndexNode', IndexNode);","map":{"version":3,"names":["Node","addNodeClass","varying","nodeImmutable","IndexNode","_Node","_inherits","_super","_createSuper","scope","_this","_classCallCheck","call","isInstanceIndexNode","_createClass","key","value","generate","builder","nodeType","getNodeType","propertyName","VERTEX","getVertexIndex","INSTANCE","getInstanceIndex","Error","output","shaderStage","nodeVarying","build","vertexIndex","instanceIndex"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/core/IndexNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport { varying } from './VaryingNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass IndexNode extends Node {\n\n\tconstructor( scope ) {\n\n\t\tsuper( 'uint' );\n\n\t\tthis.scope = scope;\n\n\t\tthis.isInstanceIndexNode = true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeType = this.getNodeType( builder );\n\t\tconst scope = this.scope;\n\n\t\tlet propertyName;\n\n\t\tif ( scope === IndexNode.VERTEX ) {\n\n\t\t\tpropertyName = builder.getVertexIndex();\n\n\t\t} else if ( scope === IndexNode.INSTANCE ) {\n\n\t\t\tpropertyName = builder.getInstanceIndex();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.IndexNode: Unknown scope: ' + scope );\n\n\t\t}\n\n\t\tlet output;\n\n\t\tif ( builder.shaderStage === 'vertex' || builder.shaderStage === 'compute' ) {\n\n\t\t\toutput = propertyName;\n\n\t\t} else {\n\n\t\t\tconst nodeVarying = varying( this );\n\n\t\t\toutput = nodeVarying.build( builder, nodeType );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nIndexNode.VERTEX = 'vertex';\nIndexNode.INSTANCE = 'instance';\n\nexport default IndexNode;\n\nexport const vertexIndex = nodeImmutable( IndexNode, IndexNode.VERTEX );\nexport const instanceIndex = nodeImmutable( IndexNode, IndexNode.INSTANCE );\n\naddNodeClass( 'IndexNode', IndexNode );\n"],"mappings":";;;;AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,WAAW;AAC9C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,aAAa,QAAQ,6BAA6B;AAAC,IAEtDC,SAAS,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAEd,SAAAA,UAAaK,KAAK,EAAG;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,SAAA;IAEpBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAO,MAAM;IAEbF,KAAA,CAAKD,KAAK,GAAGA,KAAK;IAElBC,KAAA,CAAKG,mBAAmB,GAAG,IAAI;IAAC,OAAAH,KAAA;EAEjC;EAACI,YAAA,CAAAV,SAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAUC,OAAO,EAAG;MAEnB,IAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAEF,OAAQ,CAAC;MAC5C,IAAMT,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAIY,YAAY;MAEhB,IAAKZ,KAAK,KAAKL,SAAS,CAACkB,MAAM,EAAG;QAEjCD,YAAY,GAAGH,OAAO,CAACK,cAAc,CAAC,CAAC;MAExC,CAAC,MAAM,IAAKd,KAAK,KAAKL,SAAS,CAACoB,QAAQ,EAAG;QAE1CH,YAAY,GAAGH,OAAO,CAACO,gBAAgB,CAAC,CAAC;MAE1C,CAAC,MAAM;QAEN,MAAM,IAAIC,KAAK,CAAE,kCAAkC,GAAGjB,KAAM,CAAC;MAE9D;MAEA,IAAIkB,MAAM;MAEV,IAAKT,OAAO,CAACU,WAAW,KAAK,QAAQ,IAAIV,OAAO,CAACU,WAAW,KAAK,SAAS,EAAG;QAE5ED,MAAM,GAAGN,YAAY;MAEtB,CAAC,MAAM;QAEN,IAAMQ,WAAW,GAAG3B,OAAO,CAAE,IAAK,CAAC;QAEnCyB,MAAM,GAAGE,WAAW,CAACC,KAAK,CAAEZ,OAAO,EAAEC,QAAS,CAAC;MAEhD;MAEA,OAAOQ,MAAM;IAEd;EAAC;EAAA,OAAAvB,SAAA;AAAA,EAjDsBJ,IAAI;AAqD5BI,SAAS,CAACkB,MAAM,GAAG,QAAQ;AAC3BlB,SAAS,CAACoB,QAAQ,GAAG,UAAU;AAE/B,eAAepB,SAAS;AAExB,OAAO,IAAM2B,WAAW,GAAG5B,aAAa,CAAEC,SAAS,EAAEA,SAAS,CAACkB,MAAO,CAAC;AACvE,OAAO,IAAMU,aAAa,GAAG7B,aAAa,CAAEC,SAAS,EAAEA,SAAS,CAACoB,QAAS,CAAC;AAE3EvB,YAAY,CAAE,WAAW,EAAEG,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}