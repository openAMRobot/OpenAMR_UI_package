{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { getValueType } from '../core/NodeUtils.js';\nimport { buffer } from '../accessors/BufferNode.js';\n//import { bufferAttribute } from '../accessors/BufferAttributeNode.js';\nimport { instanceIndex } from '../core/IndexNode.js';\nimport { nodeProxy, float } from '../shadernode/ShaderNode.js';\nimport { Vector4, MathUtils } from 'three';\nvar min = null;\nvar max = null;\nvar RangeNode = /*#__PURE__*/function (_Node) {\n  _inherits(RangeNode, _Node);\n  var _super = _createSuper(RangeNode);\n  function RangeNode() {\n    var _this;\n    var minNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : float();\n    var maxNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : float();\n    _classCallCheck(this, RangeNode);\n    _this = _super.call(this);\n    _this.minNode = minNode;\n    _this.maxNode = maxNode;\n    return _this;\n  }\n  _createClass(RangeNode, [{\n    key: \"getVectorLength\",\n    value: function getVectorLength(builder) {\n      var minLength = builder.getTypeLength(getValueType(this.minNode.value));\n      var maxLength = builder.getTypeLength(getValueType(this.maxNode.value));\n      return minLength > maxLength ? minLength : maxLength;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return builder.object.isInstancedMesh === true ? builder.getTypeFromLength(this.getVectorLength(builder)) : 'float';\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      var object = builder.object;\n      var output = null;\n      if (object.isInstancedMesh === true) {\n        var minValue = this.minNode.value;\n        var maxValue = this.maxNode.value;\n        var minLength = builder.getTypeLength(getValueType(minValue));\n        var maxLength = builder.getTypeLength(getValueType(maxValue));\n        min = min || new Vector4();\n        max = max || new Vector4();\n        min.setScalar(0);\n        max.setScalar(0);\n        if (minLength === 1) min.setScalar(minValue);else if (minValue.isColor) min.set(minValue.r, minValue.g, minValue.b);else min.set(minValue.x, minValue.y, minValue.z || 0, minValue.w || 0);\n        if (maxLength === 1) max.setScalar(maxValue);else if (maxValue.isColor) max.set(maxValue.r, maxValue.g, maxValue.b);else max.set(maxValue.x, maxValue.y, maxValue.z || 0, maxValue.w || 0);\n        var stride = 4;\n        var length = stride * object.count;\n        var array = new Float32Array(length);\n        for (var i = 0; i < length; i++) {\n          var index = i % stride;\n          var minElementValue = min.getComponent(index);\n          var maxElementValue = max.getComponent(index);\n          array[i] = MathUtils.lerp(minElementValue, maxElementValue, Math.random());\n        }\n        var nodeType = this.getNodeType(builder);\n        output = buffer(array, 'vec4', object.count).element(instanceIndex).convert(nodeType);\n        //output = bufferAttribute( array, 'vec4', 4, 0 ).convert( nodeType );\n      } else {\n        output = float(0);\n      }\n      return output;\n    }\n  }]);\n  return RangeNode;\n}(Node);\nexport default RangeNode;\nexport var range = nodeProxy(RangeNode);\naddNodeClass('RangeNode', RangeNode);","map":{"version":3,"names":["Node","addNodeClass","getValueType","buffer","instanceIndex","nodeProxy","float","Vector4","MathUtils","min","max","RangeNode","_Node","_inherits","_super","_createSuper","_this","minNode","arguments","length","undefined","maxNode","_classCallCheck","call","_createClass","key","value","getVectorLength","builder","minLength","getTypeLength","maxLength","getNodeType","object","isInstancedMesh","getTypeFromLength","setup","output","minValue","maxValue","setScalar","isColor","set","r","g","b","x","y","z","w","stride","count","array","Float32Array","i","index","minElementValue","getComponent","maxElementValue","lerp","Math","random","nodeType","element","convert","range"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/geometry/RangeNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { getValueType } from '../core/NodeUtils.js';\nimport { buffer } from '../accessors/BufferNode.js';\n//import { bufferAttribute } from '../accessors/BufferAttributeNode.js';\nimport { instanceIndex } from '../core/IndexNode.js';\nimport { nodeProxy, float } from '../shadernode/ShaderNode.js';\n\nimport { Vector4, MathUtils } from 'three';\n\nlet min = null;\nlet max = null;\n\nclass RangeNode extends Node {\n\n\tconstructor( minNode = float(), maxNode = float() ) {\n\n\t\tsuper();\n\n\t\tthis.minNode = minNode;\n\t\tthis.maxNode = maxNode;\n\n\t}\n\n\tgetVectorLength( builder ) {\n\n\t\tconst minLength = builder.getTypeLength( getValueType( this.minNode.value ) );\n\t\tconst maxLength = builder.getTypeLength( getValueType( this.maxNode.value ) );\n\n\t\treturn minLength > maxLength ? minLength : maxLength;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn builder.object.isInstancedMesh === true ? builder.getTypeFromLength( this.getVectorLength( builder ) ) : 'float';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst object = builder.object;\n\n\t\tlet output = null;\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tconst minValue = this.minNode.value;\n\t\t\tconst maxValue = this.maxNode.value;\n\n\t\t\tconst minLength = builder.getTypeLength( getValueType( minValue ) );\n\t\t\tconst maxLength = builder.getTypeLength( getValueType( maxValue ) );\n\n\t\t\tmin = min || new Vector4();\n\t\t\tmax = max || new Vector4();\n\n\t\t\tmin.setScalar( 0 );\n\t\t\tmax.setScalar( 0 );\n\n\t\t\tif ( minLength === 1 ) min.setScalar( minValue );\n\t\t\telse if ( minValue.isColor ) min.set( minValue.r, minValue.g, minValue.b );\n\t\t\telse min.set( minValue.x, minValue.y, minValue.z || 0, minValue.w || 0 );\n\n\t\t\tif ( maxLength === 1 ) max.setScalar( maxValue );\n\t\t\telse if ( maxValue.isColor ) max.set( maxValue.r, maxValue.g, maxValue.b );\n\t\t\telse max.set( maxValue.x, maxValue.y, maxValue.z || 0, maxValue.w || 0 );\n\n\t\t\tconst stride = 4;\n\n\t\t\tconst length = stride * object.count;\n\t\t\tconst array = new Float32Array( length );\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst index = i % stride;\n\n\t\t\t\tconst minElementValue = min.getComponent( index );\n\t\t\t\tconst maxElementValue = max.getComponent( index );\n\n\t\t\t\tarray[ i ] = MathUtils.lerp( minElementValue, maxElementValue, Math.random() );\n\n\t\t\t}\n\n\t\t\tconst nodeType = this.getNodeType( builder );\n\n\t\t\toutput = buffer( array, 'vec4', object.count ).element( instanceIndex ).convert( nodeType );\n\t\t\t//output = bufferAttribute( array, 'vec4', 4, 0 ).convert( nodeType );\n\n\t\t} else {\n\n\t\t\toutput = float( 0 );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nexport default RangeNode;\n\nexport const range = nodeProxy( RangeNode );\n\naddNodeClass( 'RangeNode', RangeNode );\n"],"mappings":";;;;AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,iBAAiB;AACpD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,MAAM,QAAQ,4BAA4B;AACnD;AACA,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,EAAEC,KAAK,QAAQ,6BAA6B;AAE9D,SAASC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAE1C,IAAIC,GAAG,GAAG,IAAI;AACd,IAAIC,GAAG,GAAG,IAAI;AAAC,IAETC,SAAS,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAEd,SAAAA,UAAA,EAAoD;IAAA,IAAAK,KAAA;IAAA,IAAvCC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,KAAK,CAAC,CAAC;IAAA,IAAEe,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,KAAK,CAAC,CAAC;IAAAgB,eAAA,OAAAX,SAAA;IAEhDK,KAAA,GAAAF,MAAA,CAAAS,IAAA;IAEAP,KAAA,CAAKC,OAAO,GAAGA,OAAO;IACtBD,KAAA,CAAKK,OAAO,GAAGA,OAAO;IAAC,OAAAL,KAAA;EAExB;EAACQ,YAAA,CAAAb,SAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAC,gBAAiBC,OAAO,EAAG;MAE1B,IAAMC,SAAS,GAAGD,OAAO,CAACE,aAAa,CAAE5B,YAAY,CAAE,IAAI,CAACe,OAAO,CAACS,KAAM,CAAE,CAAC;MAC7E,IAAMK,SAAS,GAAGH,OAAO,CAACE,aAAa,CAAE5B,YAAY,CAAE,IAAI,CAACmB,OAAO,CAACK,KAAM,CAAE,CAAC;MAE7E,OAAOG,SAAS,GAAGE,SAAS,GAAGF,SAAS,GAAGE,SAAS;IAErD;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAM,YAAaJ,OAAO,EAAG;MAEtB,OAAOA,OAAO,CAACK,MAAM,CAACC,eAAe,KAAK,IAAI,GAAGN,OAAO,CAACO,iBAAiB,CAAE,IAAI,CAACR,eAAe,CAAEC,OAAQ,CAAE,CAAC,GAAG,OAAO;IAExH;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAU,MAAOR,OAAO,EAAG;MAEhB,IAAMK,MAAM,GAAGL,OAAO,CAACK,MAAM;MAE7B,IAAII,MAAM,GAAG,IAAI;MAEjB,IAAKJ,MAAM,CAACC,eAAe,KAAK,IAAI,EAAG;QAEtC,IAAMI,QAAQ,GAAG,IAAI,CAACrB,OAAO,CAACS,KAAK;QACnC,IAAMa,QAAQ,GAAG,IAAI,CAAClB,OAAO,CAACK,KAAK;QAEnC,IAAMG,SAAS,GAAGD,OAAO,CAACE,aAAa,CAAE5B,YAAY,CAAEoC,QAAS,CAAE,CAAC;QACnE,IAAMP,SAAS,GAAGH,OAAO,CAACE,aAAa,CAAE5B,YAAY,CAAEqC,QAAS,CAAE,CAAC;QAEnE9B,GAAG,GAAGA,GAAG,IAAI,IAAIF,OAAO,CAAC,CAAC;QAC1BG,GAAG,GAAGA,GAAG,IAAI,IAAIH,OAAO,CAAC,CAAC;QAE1BE,GAAG,CAAC+B,SAAS,CAAE,CAAE,CAAC;QAClB9B,GAAG,CAAC8B,SAAS,CAAE,CAAE,CAAC;QAElB,IAAKX,SAAS,KAAK,CAAC,EAAGpB,GAAG,CAAC+B,SAAS,CAAEF,QAAS,CAAC,CAAC,KAC5C,IAAKA,QAAQ,CAACG,OAAO,EAAGhC,GAAG,CAACiC,GAAG,CAAEJ,QAAQ,CAACK,CAAC,EAAEL,QAAQ,CAACM,CAAC,EAAEN,QAAQ,CAACO,CAAE,CAAC,CAAC,KACtEpC,GAAG,CAACiC,GAAG,CAAEJ,QAAQ,CAACQ,CAAC,EAAER,QAAQ,CAACS,CAAC,EAAET,QAAQ,CAACU,CAAC,IAAI,CAAC,EAAEV,QAAQ,CAACW,CAAC,IAAI,CAAE,CAAC;QAExE,IAAKlB,SAAS,KAAK,CAAC,EAAGrB,GAAG,CAAC8B,SAAS,CAAED,QAAS,CAAC,CAAC,KAC5C,IAAKA,QAAQ,CAACE,OAAO,EAAG/B,GAAG,CAACgC,GAAG,CAAEH,QAAQ,CAACI,CAAC,EAAEJ,QAAQ,CAACK,CAAC,EAAEL,QAAQ,CAACM,CAAE,CAAC,CAAC,KACtEnC,GAAG,CAACgC,GAAG,CAAEH,QAAQ,CAACO,CAAC,EAAEP,QAAQ,CAACQ,CAAC,EAAER,QAAQ,CAACS,CAAC,IAAI,CAAC,EAAET,QAAQ,CAACU,CAAC,IAAI,CAAE,CAAC;QAExE,IAAMC,MAAM,GAAG,CAAC;QAEhB,IAAM/B,MAAM,GAAG+B,MAAM,GAAGjB,MAAM,CAACkB,KAAK;QACpC,IAAMC,KAAK,GAAG,IAAIC,YAAY,CAAElC,MAAO,CAAC;QAExC,KAAM,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnC,MAAM,EAAEmC,CAAC,EAAG,EAAG;UAEnC,IAAMC,KAAK,GAAGD,CAAC,GAAGJ,MAAM;UAExB,IAAMM,eAAe,GAAG/C,GAAG,CAACgD,YAAY,CAAEF,KAAM,CAAC;UACjD,IAAMG,eAAe,GAAGhD,GAAG,CAAC+C,YAAY,CAAEF,KAAM,CAAC;UAEjDH,KAAK,CAAEE,CAAC,CAAE,GAAG9C,SAAS,CAACmD,IAAI,CAAEH,eAAe,EAAEE,eAAe,EAAEE,IAAI,CAACC,MAAM,CAAC,CAAE,CAAC;QAE/E;QAEA,IAAMC,QAAQ,GAAG,IAAI,CAAC9B,WAAW,CAAEJ,OAAQ,CAAC;QAE5CS,MAAM,GAAGlC,MAAM,CAAEiD,KAAK,EAAE,MAAM,EAAEnB,MAAM,CAACkB,KAAM,CAAC,CAACY,OAAO,CAAE3D,aAAc,CAAC,CAAC4D,OAAO,CAAEF,QAAS,CAAC;QAC3F;MAED,CAAC,MAAM;QAENzB,MAAM,GAAG/B,KAAK,CAAE,CAAE,CAAC;MAEpB;MAEA,OAAO+B,MAAM;IAEd;EAAC;EAAA,OAAA1B,SAAA;AAAA,EAnFsBX,IAAI;AAuF5B,eAAeW,SAAS;AAExB,OAAO,IAAMsD,KAAK,GAAG5D,SAAS,CAAEM,SAAU,CAAC;AAE3CV,YAAY,CAAE,WAAW,EAAEU,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}