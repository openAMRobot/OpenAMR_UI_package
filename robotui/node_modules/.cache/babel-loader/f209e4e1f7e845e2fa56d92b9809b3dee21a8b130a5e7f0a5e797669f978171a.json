{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject, nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\nvar TimerNode = /*#__PURE__*/function (_UniformNode) {\n  _inherits(TimerNode, _UniformNode);\n  var _super = _createSuper(TimerNode);\n  function TimerNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TimerNode.LOCAL;\n    var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    _classCallCheck(this, TimerNode);\n    _this = _super.call(this, value);\n    _this.scope = scope;\n    _this.scale = scale;\n    _this.updateType = NodeUpdateType.FRAME;\n    return _this;\n  }\n  /*\n  @TODO:\n  getNodeType( builder ) {\n  \t\tconst scope = this.scope;\n  \t\tif ( scope === TimerNode.FRAME ) {\n  \t\t\treturn 'uint';\n  \t\t}\n  \t\treturn 'float';\n  \t}\n  */\n  _createClass(TimerNode, [{\n    key: \"update\",\n    value: function update(frame) {\n      var scope = this.scope;\n      var scale = this.scale;\n      if (scope === TimerNode.LOCAL) {\n        this.value += frame.deltaTime * scale;\n      } else if (scope === TimerNode.DELTA) {\n        this.value = frame.deltaTime * scale;\n      } else if (scope === TimerNode.FRAME) {\n        this.value = frame.frameId;\n      } else {\n        // global\n\n        this.value = frame.time * scale;\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(TimerNode.prototype), \"serialize\", this).call(this, data);\n      data.scope = this.scope;\n      data.scale = this.scale;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(TimerNode.prototype), \"deserialize\", this).call(this, data);\n      this.scope = data.scope;\n      this.scale = data.scale;\n    }\n  }]);\n  return TimerNode;\n}(UniformNode);\nTimerNode.LOCAL = 'local';\nTimerNode.GLOBAL = 'global';\nTimerNode.DELTA = 'delta';\nTimerNode.FRAME = 'frame';\nexport default TimerNode;\n\n// @TODO: add support to use node in timeScale\nexport var timerLocal = function timerLocal(timeScale) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return nodeObject(new TimerNode(TimerNode.LOCAL, timeScale, value));\n};\nexport var timerGlobal = function timerGlobal(timeScale) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return nodeObject(new TimerNode(TimerNode.GLOBAL, timeScale, value));\n};\nexport var timerDelta = function timerDelta(timeScale) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return nodeObject(new TimerNode(TimerNode.DELTA, timeScale, value));\n};\nexport var frameId = nodeImmutable(TimerNode, TimerNode.FRAME).uint();\naddNodeClass('TimerNode', TimerNode);","map":{"version":3,"names":["UniformNode","NodeUpdateType","nodeObject","nodeImmutable","addNodeClass","TimerNode","_UniformNode","_inherits","_super","_createSuper","_this","scope","arguments","length","undefined","LOCAL","scale","value","_classCallCheck","call","updateType","FRAME","_createClass","key","update","frame","deltaTime","DELTA","frameId","time","serialize","data","_get","_getPrototypeOf","prototype","deserialize","GLOBAL","timerLocal","timeScale","timerGlobal","timerDelta","uint"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/utils/TimerNode.js"],"sourcesContent":["import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject, nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass TimerNode extends UniformNode {\n\n\tconstructor( scope = TimerNode.LOCAL, scale = 1, value = 0 ) {\n\n\t\tsuper( value );\n\n\t\tthis.scope = scope;\n\t\tthis.scale = scale;\n\n\t\tthis.updateType = NodeUpdateType.FRAME;\n\n\t}\n\t/*\n\t@TODO:\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TimerNode.FRAME ) {\n\n\t\t\treturn 'uint';\n\n\t\t}\n\n\t\treturn 'float';\n\n\t}\n*/\n\tupdate( frame ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scale = this.scale;\n\n\t\tif ( scope === TimerNode.LOCAL ) {\n\n\t\t\tthis.value += frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.DELTA ) {\n\n\t\t\tthis.value = frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.FRAME ) {\n\n\t\t\tthis.value = frame.frameId;\n\n\t\t} else {\n\n\t\t\t// global\n\n\t\t\tthis.value = frame.time * scale;\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\t\tdata.scale = this.scale;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\t\tthis.scale = data.scale;\n\n\t}\n\n}\n\nTimerNode.LOCAL = 'local';\nTimerNode.GLOBAL = 'global';\nTimerNode.DELTA = 'delta';\nTimerNode.FRAME = 'frame';\n\nexport default TimerNode;\n\n// @TODO: add support to use node in timeScale\nexport const timerLocal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.LOCAL, timeScale, value ) );\nexport const timerGlobal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.GLOBAL, timeScale, value ) );\nexport const timerDelta = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.DELTA, timeScale, value ) );\nexport const frameId = nodeImmutable( TimerNode, TimerNode.FRAME ).uint();\n\naddNodeClass( 'TimerNode', TimerNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}