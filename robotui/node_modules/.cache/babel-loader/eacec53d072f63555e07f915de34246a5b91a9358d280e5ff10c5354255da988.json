{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nvar CodeNode = /*#__PURE__*/function (_Node) {\n  _inherits(CodeNode, _Node);\n  var _super = _createSuper(CodeNode);\n  function CodeNode() {\n    var _this;\n    var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var includes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var language = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    _classCallCheck(this, CodeNode);\n    _this = _super.call(this, 'code');\n    _this.isCodeNode = true;\n    _this.code = code;\n    _this.language = language;\n    _this._includes = includes;\n    return _this;\n  }\n  _createClass(CodeNode, [{\n    key: \"setIncludes\",\n    value: function setIncludes(includes) {\n      this._includes = includes;\n      return this;\n    }\n  }, {\n    key: \"getIncludes\",\n    value: function getIncludes( /*builder*/\n    ) {\n      return this._includes;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var includes = this.getIncludes(builder);\n      var _iterator = _createForOfIteratorHelper(includes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var include = _step.value;\n          include.build(builder);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var nodeCode = builder.getCodeFromNode(this, this.getNodeType(builder));\n      nodeCode.code = this.code;\n      return nodeCode.code;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(CodeNode.prototype), \"serialize\", this).call(this, data);\n      data.code = this.code;\n      data.language = this.language;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(CodeNode.prototype), \"deserialize\", this).call(this, data);\n      this.code = data.code;\n      this.language = data.language;\n    }\n  }]);\n  return CodeNode;\n}(Node);\nexport default CodeNode;\nexport var code = nodeProxy(CodeNode);\nexport var js = function js(src, includes) {\n  return code(src, includes, 'js');\n};\nexport var wgsl = function wgsl(src, includes) {\n  return code(src, includes, 'wgsl');\n};\nexport var glsl = function glsl(src, includes) {\n  return code(src, includes, 'glsl');\n};\naddNodeClass('CodeNode', CodeNode);","map":{"version":3,"names":["Node","addNodeClass","nodeProxy","CodeNode","_Node","_inherits","_super","_createSuper","_this","code","arguments","length","undefined","includes","language","_classCallCheck","call","isCodeNode","_includes","_createClass","key","value","setIncludes","getIncludes","generate","builder","_iterator","_createForOfIteratorHelper","_step","s","n","done","include","build","err","e","f","nodeCode","getCodeFromNode","getNodeType","serialize","data","_get","_getPrototypeOf","prototype","deserialize","js","src","wgsl","glsl"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/code/CodeNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass CodeNode extends Node {\n\n\tconstructor( code = '', includes = [], language = '' ) {\n\n\t\tsuper( 'code' );\n\n\t\tthis.isCodeNode = true;\n\n\t\tthis.code = code;\n\t\tthis.language = language;\n\n\t\tthis._includes = includes;\n\n\t}\n\n\tsetIncludes( includes ) {\n\n\t\tthis._includes = includes;\n\n\t\treturn this;\n\n\t}\n\n\tgetIncludes( /*builder*/ ) {\n\n\t\treturn this._includes;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst includes = this.getIncludes( builder );\n\n\t\tfor ( const include of includes ) {\n\n\t\t\tinclude.build( builder );\n\n\t\t}\n\n\t\tconst nodeCode = builder.getCodeFromNode( this, this.getNodeType( builder ) );\n\t\tnodeCode.code = this.code;\n\n\t\treturn nodeCode.code;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.code = this.code;\n\t\tdata.language = this.language;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.code = data.code;\n\t\tthis.language = data.language;\n\n\t}\n\n}\n\nexport default CodeNode;\n\nexport const code = nodeProxy( CodeNode );\n\nexport const js = ( src, includes ) => code( src, includes, 'js' );\nexport const wgsl = ( src, includes ) => code( src, includes, 'wgsl' );\nexport const glsl = ( src, includes ) => code( src, includes, 'glsl' );\n\naddNodeClass( 'CodeNode', CodeNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}