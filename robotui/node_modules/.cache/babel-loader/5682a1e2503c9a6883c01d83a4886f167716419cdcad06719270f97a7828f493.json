{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nvar XYZ_TO_REC709 = mat3(3.2404542, -0.9692660, 0.0556434, -1.5371385, 1.8760108, -0.2040259, -0.4985314, 0.0415560, 1.0572252);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nvar Fresnel0ToIor = function Fresnel0ToIor(fresnel0) {\n  var sqrtF0 = fresnel0.sqrt();\n  return vec3(1.0).add(sqrtF0).div(vec3(1.0).sub(sqrtF0));\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nvar IorToFresnel0 = function IorToFresnel0(transmittedIor, incidentIor) {\n  return transmittedIor.sub(incidentIor).div(transmittedIor.add(incidentIor)).pow2();\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nvar evalSensitivity = function evalSensitivity(OPD, shift) {\n  var phase = OPD.mul(2.0 * Math.PI * 1.0e-9);\n  var val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n  var pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n  var VAR = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n  var x = float(9.7470e-14 * Math.sqrt(2.0 * Math.PI * 4.5282e+09)).mul(phase.mul(2.2399e+06).add(shift.x).cos()).mul(phase.pow2().mul(-4.5282e+09).exp());\n  var xyz = val.mul(VAR.mul(2.0 * Math.PI).sqrt()).mul(pos.mul(phase).add(shift).cos()).mul(phase.pow2().negate().mul(VAR).exp());\n  xyz = vec3(xyz.x.add(x), xyz.y, xyz.z).div(1.0685e-7);\n  var rgb = XYZ_TO_REC709.mul(xyz);\n  return rgb;\n};\nvar evalIridescence = function evalIridescence(outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0) {\n  // Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n  var iridescenceIOR = mix(outsideIOR, eta2, smoothstep(0.0, 0.03, thinFilmThickness));\n  // Evaluate the cosTheta on the base layer (Snell law)\n  var sinTheta2Sq = outsideIOR.div(iridescenceIOR).pow2().mul(float(1).sub(cosTheta1.pow2()));\n\n  // Handle TIR:\n  var cosTheta2Sq = float(1).sub(sinTheta2Sq);\n  /*if ( cosTheta2Sq < 0.0 ) {\n  \t\t\treturn vec3( 1.0 );\n  \t}*/\n\n  var cosTheta2 = cosTheta2Sq.sqrt();\n\n  // First interface\n  var R0 = IorToFresnel0(iridescenceIOR, outsideIOR);\n  var R12 = F_Schlick({\n    f0: R0,\n    f90: 1.0,\n    dotVH: cosTheta1\n  });\n  //const R21 = R12;\n  var T121 = R12.oneMinus();\n  var phi12 = iridescenceIOR.lessThan(outsideIOR).cond(Math.PI, 0.0);\n  var phi21 = float(Math.PI).sub(phi12);\n\n  // Second interface\n  var baseIOR = Fresnel0ToIor(baseF0.clamp(0.0, 0.9999)); // guard against 1.0\n  var R1 = IorToFresnel0(baseIOR, iridescenceIOR.vec3());\n  var R23 = F_Schlick({\n    f0: R1,\n    f90: 1.0,\n    dotVH: cosTheta2\n  });\n  var phi23 = vec3(baseIOR.x.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.y.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.z.lessThan(iridescenceIOR).cond(Math.PI, 0.0));\n\n  // Phase shift\n  var OPD = iridescenceIOR.mul(thinFilmThickness, cosTheta2, 2.0);\n  var phi = vec3(phi21).add(phi23);\n\n  // Compound terms\n  var R123 = R12.mul(R23).clamp(1e-5, 0.9999);\n  var r123 = R123.sqrt();\n  var Rs = T121.pow2().mul(R23).div(vec3(1.0).sub(R123));\n\n  // Reflectance term for m = 0 (DC term amplitude)\n  var C0 = R12.add(Rs);\n  var I = C0;\n\n  // Reflectance term for m > 0 (pairs of diracs)\n  var Cm = Rs.sub(T121);\n  for (var m = 1; m <= 2; ++m) {\n    Cm = Cm.mul(r123);\n    var Sm = evalSensitivity(float(m).mul(OPD), float(m).mul(phi)).mul(2.0);\n    I = I.add(Cm.mul(Sm));\n  }\n\n  // Since out of gamut colors might be produced, negative color values are clamped to 0.\n  return I.max(vec3(0.0));\n};\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nvar IBLSheenBRDF = function IBLSheenBRDF(normal, viewDir, roughness) {\n  var dotNV = normal.dot(viewDir).saturate();\n  var r2 = roughness.pow2();\n  var a = cond(roughness.lessThan(0.25), float(-339.2).mul(r2).add(float(161.4).mul(roughness)).sub(25.9), float(-8.48).mul(r2).add(float(14.3).mul(roughness)).sub(9.95));\n  var b = cond(roughness.lessThan(0.25), float(44.0).mul(r2).sub(float(23.7).mul(roughness)).add(3.26), float(1.97).mul(r2).sub(float(3.27).mul(roughness)).add(0.72));\n  var DG = cond(roughness.lessThan(0.25), 0.0, float(0.1).mul(roughness).sub(0.025)).add(a.mul(dotNV).add(b).exp());\n  return DG.mul(1.0 / Math.PI).saturate();\n};\nvar clearcoatF0 = vec3(0.04);\nvar clearcoatF90 = vec3(1);\n\n//\nvar PhysicalLightingModel = /*#__PURE__*/function (_LightingModel) {\n  _inherits(PhysicalLightingModel, _LightingModel);\n  var _super = _createSuper(PhysicalLightingModel);\n  function PhysicalLightingModel() {\n    var _this;\n    var clearcoat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var sheen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var iridescence = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    _classCallCheck(this, PhysicalLightingModel);\n    _this = _super.call(this);\n    _this.clearcoat = clearcoat;\n    _this.sheen = sheen;\n    _this.iridescence = iridescence;\n    _this.clearcoatRadiance = null;\n    _this.clearcoatSpecular = null;\n    _this.sheenSpecular = null;\n    _this.iridescenceFresnel = null;\n    _this.iridescenceF0 = null;\n    return _this;\n  }\n  _createClass(PhysicalLightingModel, [{\n    key: \"init\",\n    value: function init(_ref) {\n      var reflectedLight = _ref.reflectedLight;\n      if (this.clearcoat === true) {\n        this.clearcoatRadiance = vec3().temp();\n        this.clearcoatSpecular = vec3().temp();\n        var dotNVcc = transformedClearcoatNormalView.dot(positionViewDirection).clamp();\n        var Fcc = F_Schlick({\n          dotVH: dotNVcc,\n          f0: clearcoatF0,\n          f90: clearcoatF90\n        });\n        var outgoingLight = reflectedLight.total;\n        var clearcoatLight = outgoingLight.mul(clearcoat.mul(Fcc).oneMinus()).add(this.clearcoatSpecular.mul(clearcoat));\n        outgoingLight.assign(clearcoatLight);\n      }\n      if (this.sheen === true) {\n        this.sheenSpecular = vec3().temp();\n        var _outgoingLight = reflectedLight.total;\n        var sheenEnergyComp = sheen.r.max(sheen.g).max(sheen.b).mul(0.157).oneMinus();\n        var sheenLight = _outgoingLight.mul(sheenEnergyComp).add(this.sheenSpecular);\n        _outgoingLight.assign(sheenLight);\n      }\n      if (this.iridescence === true) {\n        var dotNVi = transformedNormalView.dot(positionViewDirection).clamp();\n        this.iridescenceFresnel = evalIridescence(float(1.0), iridescenceIOR, dotNVi, iridescenceThickness, specularColor);\n        this.iridescenceF0 = Schlick_to_F0({\n          f: this.iridescenceFresnel,\n          f90: 1.0,\n          dotVH: dotNVi\n        });\n      }\n    }\n\n    // Fdez-AgÃ¼era's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n    // Approximates multiscattering in order to preserve energy.\n    // http://www.jcgt.org/published/0008/01/03/\n  }, {\n    key: \"computeMultiscattering\",\n    value: function computeMultiscattering(singleScatter, multiScatter) {\n      var specularF90 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : float(1);\n      var fab = DFGApprox({\n        roughness: roughness\n      });\n      var Fr = this.iridescenceF0 ? iridescence.mix(specularColor, this.iridescenceF0) : specularColor;\n      var FssEss = Fr.mul(fab.x).add(specularF90.mul(fab.y));\n      var Ess = fab.x.add(fab.y);\n      var Ems = Ess.oneMinus();\n      var Favg = specularColor.add(specularColor.oneMinus().mul(0.047619)); // 1/21\n      var Fms = FssEss.mul(Favg).div(Ems.mul(Favg).oneMinus());\n      singleScatter.addAssign(FssEss);\n      multiScatter.addAssign(Fms.mul(Ems));\n    }\n  }, {\n    key: \"direct\",\n    value: function direct(_ref2) {\n      var lightDirection = _ref2.lightDirection,\n        lightColor = _ref2.lightColor,\n        reflectedLight = _ref2.reflectedLight;\n      var dotNL = transformedNormalView.dot(lightDirection).clamp();\n      var irradiance = dotNL.mul(lightColor);\n      if (this.sheen === true) {\n        this.sheenSpecular.addAssign(irradiance.mul(BRDF_Sheen({\n          lightDirection: lightDirection\n        })));\n      }\n      if (this.clearcoat === true) {\n        var dotNLcc = transformedClearcoatNormalView.dot(lightDirection).clamp();\n        var ccIrradiance = dotNLcc.mul(lightColor);\n        this.clearcoatSpecular.addAssign(ccIrradiance.mul(BRDF_GGX({\n          lightDirection: lightDirection,\n          f0: clearcoatF0,\n          f90: clearcoatF90,\n          roughness: clearcoatRoughness,\n          normalView: transformedClearcoatNormalView\n        })));\n      }\n      reflectedLight.directDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n        diffuseColor: diffuseColor.rgb\n      })));\n      reflectedLight.directSpecular.addAssign(irradiance.mul(BRDF_GGX({\n        lightDirection: lightDirection,\n        f0: specularColor,\n        f90: 1,\n        roughness: roughness,\n        iridescence: this.iridescence,\n        iridescenceFresnel: this.iridescenceFresnel\n      })));\n    }\n  }, {\n    key: \"indirectDiffuse\",\n    value: function indirectDiffuse(_ref3) {\n      var irradiance = _ref3.irradiance,\n        reflectedLight = _ref3.reflectedLight;\n      reflectedLight.indirectDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n        diffuseColor: diffuseColor\n      })));\n    }\n  }, {\n    key: \"indirectSpecular\",\n    value: function indirectSpecular(_ref4) {\n      var radiance = _ref4.radiance,\n        iblIrradiance = _ref4.iblIrradiance,\n        reflectedLight = _ref4.reflectedLight;\n      if (this.sheen === true) {\n        this.sheenSpecular.addAssign(iblIrradiance.mul(sheen, IBLSheenBRDF(transformedNormalView, positionViewDirection, sheenRoughness)));\n      }\n      if (this.clearcoat === true) {\n        var dotNVcc = transformedClearcoatNormalView.dot(positionViewDirection).clamp();\n        var clearcoatEnv = EnvironmentBRDF({\n          dotNV: dotNVcc,\n          specularColor: clearcoatF0,\n          specularF90: clearcoatF90,\n          roughness: clearcoatRoughness\n        });\n        this.clearcoatSpecular.addAssign(this.clearcoatRadiance.mul(clearcoatEnv));\n      }\n\n      // Both indirect specular and indirect diffuse light accumulate here\n\n      var singleScattering = vec3().temp();\n      var multiScattering = vec3().temp();\n      var cosineWeightedIrradiance = iblIrradiance.mul(1 / Math.PI);\n      this.computeMultiscattering(singleScattering, multiScattering);\n      var totalScattering = singleScattering.add(multiScattering);\n      var diffuse = diffuseColor.mul(totalScattering.r.max(totalScattering.g).max(totalScattering.b).oneMinus());\n      reflectedLight.indirectSpecular.addAssign(radiance.mul(singleScattering));\n      reflectedLight.indirectSpecular.addAssign(multiScattering.mul(cosineWeightedIrradiance));\n      reflectedLight.indirectDiffuse.addAssign(diffuse.mul(cosineWeightedIrradiance));\n    }\n  }, {\n    key: \"ambientOcclusion\",\n    value: function ambientOcclusion(_ref5) {\n      var _ambientOcclusion = _ref5.ambientOcclusion,\n        reflectedLight = _ref5.reflectedLight;\n      var dotNV = transformedNormalView.dot(positionViewDirection).clamp(); // @ TODO: Move to core dotNV\n\n      var aoNV = dotNV.add(_ambientOcclusion);\n      var aoExp = roughness.mul(-16.0).oneMinus().negate().exp2();\n      var aoNode = _ambientOcclusion.sub(aoNV.pow(aoExp).oneMinus()).clamp();\n      reflectedLight.indirectDiffuse.mulAssign(_ambientOcclusion);\n      reflectedLight.indirectSpecular.mulAssign(aoNode);\n    }\n  }]);\n  return PhysicalLightingModel;\n}(LightingModel);\nexport default PhysicalLightingModel;","map":{"version":3,"names":["BRDF_Lambert","BRDF_GGX","DFGApprox","EnvironmentBRDF","F_Schlick","Schlick_to_F0","BRDF_Sheen","LightingModel","diffuseColor","specularColor","roughness","clearcoat","clearcoatRoughness","sheen","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","transformedNormalView","transformedClearcoatNormalView","positionViewDirection","float","vec3","mat3","cond","mix","smoothstep","XYZ_TO_REC709","Fresnel0ToIor","fresnel0","sqrtF0","sqrt","add","div","sub","IorToFresnel0","transmittedIor","incidentIor","pow2","evalSensitivity","OPD","shift","phase","mul","Math","PI","val","pos","VAR","x","cos","exp","xyz","negate","y","z","rgb","evalIridescence","outsideIOR","eta2","cosTheta1","thinFilmThickness","baseF0","sinTheta2Sq","cosTheta2Sq","cosTheta2","R0","R12","f0","f90","dotVH","T121","oneMinus","phi12","lessThan","phi21","baseIOR","clamp","R1","R23","phi23","phi","R123","r123","Rs","C0","I","Cm","m","Sm","max","IBLSheenBRDF","normal","viewDir","dotNV","dot","saturate","r2","a","b","DG","clearcoatF0","clearcoatF90","PhysicalLightingModel","_LightingModel","_inherits","_super","_createSuper","_this","arguments","length","undefined","_classCallCheck","call","clearcoatRadiance","clearcoatSpecular","sheenSpecular","iridescenceFresnel","iridescenceF0","_createClass","key","value","init","_ref","reflectedLight","temp","dotNVcc","Fcc","outgoingLight","total","clearcoatLight","assign","sheenEnergyComp","r","g","sheenLight","dotNVi","f","computeMultiscattering","singleScatter","multiScatter","specularF90","fab","Fr","FssEss","Ess","Ems","Favg","Fms","addAssign","direct","_ref2","lightDirection","lightColor","dotNL","irradiance","dotNLcc","ccIrradiance","normalView","directDiffuse","directSpecular","indirectDiffuse","_ref3","indirectSpecular","_ref4","radiance","iblIrradiance","clearcoatEnv","singleScattering","multiScattering","cosineWeightedIrradiance","totalScattering","diffuse","ambientOcclusion","_ref5","aoNV","aoExp","exp2","aoNode","pow","mulAssign"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/functions/PhysicalLightingModel.js"],"sourcesContent":["import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nconst XYZ_TO_REC709 = mat3(\n\t3.2404542, - 0.9692660, 0.0556434,\n\t- 1.5371385, 1.8760108, - 0.2040259,\n\t- 0.4985314, 0.0415560, 1.0572252\n);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nconst Fresnel0ToIor = ( fresnel0 ) => {\n\n\tconst sqrtF0 = fresnel0.sqrt();\n\treturn vec3( 1.0 ).add( sqrtF0 ).div( vec3( 1.0 ).sub( sqrtF0 ) );\n\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nconst IorToFresnel0 = ( transmittedIor, incidentIor ) => {\n\n\treturn transmittedIor.sub( incidentIor ).div( transmittedIor.add( incidentIor ) ).pow2();\n\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nconst evalSensitivity = ( OPD, shift ) => {\n\n\tconst phase = OPD.mul( 2.0 * Math.PI * 1.0e-9 );\n\tconst val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\tconst pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\tconst VAR = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\n\tconst x = float( 9.7470e-14 * Math.sqrt( 2.0 * Math.PI * 4.5282e+09 ) ).mul( phase.mul( 2.2399e+06 ).add( shift.x ).cos() ).mul( phase.pow2().mul( - 4.5282e+09 ).exp() );\n\n\tlet xyz = val.mul( VAR.mul( 2.0 * Math.PI ).sqrt() ).mul( pos.mul( phase ).add( shift ).cos() ).mul( phase.pow2().negate().mul( VAR ).exp() );\n\txyz = vec3( xyz.x.add( x ), xyz.y, xyz.z ).div( 1.0685e-7 );\n\n\tconst rgb = XYZ_TO_REC709.mul( xyz );\n\treturn rgb;\n\n};\n\nconst evalIridescence = ( outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0 ) => {\n\n\t// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n\tconst iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t// Evaluate the cosTheta on the base layer (Snell law)\n\tconst sinTheta2Sq = outsideIOR.div( iridescenceIOR ).pow2().mul( float( 1 ).sub( cosTheta1.pow2() ) );\n\n\t// Handle TIR:\n\tconst cosTheta2Sq = float( 1 ).sub( sinTheta2Sq );\n\t/*if ( cosTheta2Sq < 0.0 ) {\n\n\t\t\treturn vec3( 1.0 );\n\n\t}*/\n\n\tconst cosTheta2 = cosTheta2Sq.sqrt();\n\n\t// First interface\n\tconst R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\tconst R12 = F_Schlick( { f0: R0, f90: 1.0, dotVH: cosTheta1 } );\n\t//const R21 = R12;\n\tconst T121 = R12.oneMinus();\n\tconst phi12 = iridescenceIOR.lessThan( outsideIOR ).cond( Math.PI, 0.0 );\n\tconst phi21 = float( Math.PI ).sub( phi12 );\n\n\t// Second interface\n\tconst baseIOR = Fresnel0ToIor( baseF0.clamp( 0.0, 0.9999 ) ); // guard against 1.0\n\tconst R1 = IorToFresnel0( baseIOR, iridescenceIOR.vec3() );\n\tconst R23 = F_Schlick( { f0: R1, f90: 1.0, dotVH: cosTheta2 } );\n\tconst phi23 = vec3(\n\t\tbaseIOR.x.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.y.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.z.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 )\n\t);\n\n\t// Phase shift\n\tconst OPD = iridescenceIOR.mul( thinFilmThickness, cosTheta2, 2.0 );\n\tconst phi = vec3( phi21 ).add( phi23 );\n\n\t// Compound terms\n\tconst R123 = R12.mul( R23 ).clamp( 1e-5, 0.9999 );\n\tconst r123 = R123.sqrt();\n\tconst Rs = T121.pow2().mul( R23 ).div( vec3( 1.0 ).sub( R123 ) );\n\n\t// Reflectance term for m = 0 (DC term amplitude)\n\tconst C0 = R12.add( Rs );\n\tlet I = C0;\n\n\t// Reflectance term for m > 0 (pairs of diracs)\n\tlet Cm = Rs.sub( T121 );\n\tfor ( let m = 1; m <= 2; ++ m ) {\n\n\t\tCm = Cm.mul( r123 );\n\t\tconst Sm = evalSensitivity( float( m ).mul( OPD ), float( m ).mul( phi ) ).mul( 2.0 );\n\t\tI = I.add( Cm.mul( Sm ) );\n\n\t}\n\n\t// Since out of gamut colors might be produced, negative color values are clamped to 0.\n\treturn I.max( vec3( 0.0 ) );\n\n};\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nconst IBLSheenBRDF = ( normal, viewDir, roughness ) => {\n\n\tconst dotNV = normal.dot( viewDir ).saturate();\n\n\tconst r2 = roughness.pow2();\n\n\tconst a = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( - 339.2 ).mul( r2 ).add( float( 161.4 ).mul( roughness ) ).sub( 25.9 ),\n\t\tfloat( - 8.48 ).mul( r2 ).add( float( 14.3 ).mul( roughness ) ).sub( 9.95 )\n\t);\n\n\tconst b = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( 44.0 ).mul( r2 ).sub( float( 23.7 ).mul( roughness ) ).add( 3.26 ),\n\t\tfloat( 1.97 ).mul( r2 ).sub( float( 3.27 ).mul( roughness ) ).add( 0.72 )\n\t);\n\n\tconst DG = cond( roughness.lessThan( 0.25 ), 0.0, float( 0.1 ).mul( roughness ).sub( 0.025 ) ).add( a.mul( dotNV ).add( b ).exp() );\n\n\treturn DG.mul( 1.0 / Math.PI ).saturate();\n\n};\n\nconst clearcoatF0 = vec3( 0.04 );\nconst clearcoatF90 = vec3( 1 );\n\n//\n\nclass PhysicalLightingModel extends LightingModel {\n\n\tconstructor( clearcoat = true, sheen = true, iridescence = true ) {\n\n\t\tsuper();\n\n\t\tthis.clearcoat = clearcoat;\n\t\tthis.sheen = sheen;\n\t\tthis.iridescence = iridescence;\n\n\t\tthis.clearcoatRadiance = null;\n\t\tthis.clearcoatSpecular = null;\n\t\tthis.sheenSpecular = null;\n\t\tthis.iridescenceFresnel = null;\n\t\tthis.iridescenceF0 = null;\n\n\t}\n\n\tinit( { reflectedLight } ) {\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tthis.clearcoatRadiance = vec3().temp();\n\t\t\tthis.clearcoatSpecular = vec3().temp();\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst Fcc = F_Schlick( {\n\t\t\t\tdotVH: dotNVcc,\n\t\t\t\tf0: clearcoatF0,\n\t\t\t\tf90: clearcoatF90\n\t\t\t} );\n\n\t\t\tconst outgoingLight = reflectedLight.total;\n\t\t\tconst clearcoatLight = outgoingLight.mul( clearcoat.mul( Fcc ).oneMinus() ).add( this.clearcoatSpecular.mul( clearcoat ) );\n\n\t\t\toutgoingLight.assign( clearcoatLight );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecular = vec3().temp();\n\n\t\t\tconst outgoingLight = reflectedLight.total;\n\n\t\t\tconst sheenEnergyComp = sheen.r.max( sheen.g ).max( sheen.b ).mul( 0.157 ).oneMinus();\n\t\t\tconst sheenLight = outgoingLight.mul( sheenEnergyComp ).add( this.sheenSpecular );\n\n\t\t\toutgoingLight.assign( sheenLight );\n\n\t\t}\n\n\t\tif ( this.iridescence === true ) {\n\n\t\t\tconst dotNVi = transformedNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tthis.iridescenceFresnel = evalIridescence( float( 1.0 ), iridescenceIOR, dotNVi, iridescenceThickness, specularColor );\n\t\t\tthis.iridescenceF0 = Schlick_to_F0( { f: this.iridescenceFresnel, f90: 1.0, dotVH: dotNVi } );\n\n\t\t}\n\n\t}\n\n\t// Fdez-AgÃ¼era's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n\t// Approximates multiscattering in order to preserve energy.\n\t// http://www.jcgt.org/published/0008/01/03/\n\n\tcomputeMultiscattering( singleScatter, multiScatter, specularF90 = float( 1 ) ) {\n\n\t\tconst fab = DFGApprox( { roughness } );\n\n\t\tconst Fr = this.iridescenceF0 ? iridescence.mix( specularColor, this.iridescenceF0 ) : specularColor;\n\n\t\tconst FssEss = Fr.mul( fab.x ).add( specularF90.mul( fab.y ) );\n\n\t\tconst Ess = fab.x.add( fab.y );\n\t\tconst Ems = Ess.oneMinus();\n\n\t\tconst Favg = specularColor.add( specularColor.oneMinus().mul( 0.047619 ) ); // 1/21\n\t\tconst Fms = FssEss.mul( Favg ).div( Ems.mul( Favg ).oneMinus() );\n\n\t\tsingleScatter.addAssign( FssEss );\n\t\tmultiScatter.addAssign( Fms.mul( Ems ) );\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\n\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\n\t\tconst irradiance = dotNL.mul( lightColor );\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecular.addAssign( irradiance.mul( BRDF_Sheen( { lightDirection } ) ) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNLcc = transformedClearcoatNormalView.dot( lightDirection ).clamp();\n\t\t\tconst ccIrradiance = dotNLcc.mul( lightColor );\n\n\t\t\tthis.clearcoatSpecular.addAssign( ccIrradiance.mul( BRDF_GGX( { lightDirection, f0: clearcoatF0, f90: clearcoatF90, roughness: clearcoatRoughness, normalView: transformedClearcoatNormalView } ) ) );\n\n\t\t}\n\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_GGX( { lightDirection, f0: specularColor, f90: 1, roughness, iridescence: this.iridescence, iridescenceFresnel: this.iridescenceFresnel } ) ) );\n\n\t}\n\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\n\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\n\n\t}\n\n\tindirectSpecular( { radiance, iblIrradiance, reflectedLight, } ) {\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecular.addAssign( iblIrradiance.mul(\n\t\t\t\tsheen,\n\t\t\t\tIBLSheenBRDF( transformedNormalView, positionViewDirection, sheenRoughness )\n\t\t\t) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst clearcoatEnv = EnvironmentBRDF( {\n\t\t\t\tdotNV: dotNVcc,\n\t\t\t\tspecularColor: clearcoatF0,\n\t\t\t\tspecularF90: clearcoatF90,\n\t\t\t\troughness: clearcoatRoughness\n\t\t\t} );\n\n\t\t\tthis.clearcoatSpecular.addAssign( this.clearcoatRadiance.mul( clearcoatEnv ) );\n\n\t\t}\n\n\t\t// Both indirect specular and indirect diffuse light accumulate here\n\n\t\tconst singleScattering = vec3().temp();\n\t\tconst multiScattering = vec3().temp();\n\t\tconst cosineWeightedIrradiance = iblIrradiance.mul( 1 / Math.PI );\n\n\t\tthis.computeMultiscattering( singleScattering, multiScattering );\n\n\t\tconst totalScattering = singleScattering.add( multiScattering );\n\n\t\tconst diffuse = diffuseColor.mul( totalScattering.r.max( totalScattering.g ).max( totalScattering.b ).oneMinus() );\n\n\t\treflectedLight.indirectSpecular.addAssign( radiance.mul( singleScattering ) );\n\t\treflectedLight.indirectSpecular.addAssign( multiScattering.mul( cosineWeightedIrradiance ) );\n\n\t\treflectedLight.indirectDiffuse.addAssign( diffuse.mul( cosineWeightedIrradiance ) );\n\n\t}\n\n\tambientOcclusion( { ambientOcclusion, reflectedLight } ) {\n\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\n\t\tconst aoNV = dotNV.add( ambientOcclusion );\n\t\tconst aoExp = roughness.mul( - 16.0 ).oneMinus().negate().exp2();\n\n\t\tconst aoNode = ambientOcclusion.sub( aoNV.pow( aoExp ).oneMinus() ).clamp();\n\n\t\treflectedLight.indirectDiffuse.mulAssign( ambientOcclusion );\n\n\t\treflectedLight.indirectSpecular.mulAssign( aoNode );\n\n\t}\n\n}\n\nexport default PhysicalLightingModel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}