{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { vectorComponents } from '../core/constants.js';\nvar stringVectorComponents = vectorComponents.join('');\nvar SplitNode = /*#__PURE__*/function (_Node) {\n  _inherits(SplitNode, _Node);\n  var _super = _createSuper(SplitNode);\n  function SplitNode(node) {\n    var _this;\n    var components = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n    _classCallCheck(this, SplitNode);\n    _this = _super.call(this);\n    _this.node = node;\n    _this.components = components;\n    return _this;\n  }\n  _createClass(SplitNode, [{\n    key: \"getVectorLength\",\n    value: function getVectorLength() {\n      var vectorLength = this.components.length;\n      var _iterator = _createForOfIteratorHelper(this.components),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var c = _step.value;\n          vectorLength = Math.max(vectorComponents.indexOf(c) + 1, vectorLength);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return vectorLength;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return builder.getTypeFromLength(this.components.length);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var node = this.node;\n      var nodeTypeLength = builder.getTypeLength(node.getNodeType(builder));\n      var snippet = null;\n      if (nodeTypeLength > 1) {\n        var type = null;\n        var componentsLength = this.getVectorLength();\n        if (componentsLength >= nodeTypeLength) {\n          // needed expand the input node\n\n          type = builder.getTypeFromLength(this.getVectorLength());\n        }\n        var nodeSnippet = node.build(builder, type);\n        if (this.components.length === nodeTypeLength && this.components === stringVectorComponents.slice(0, this.components.length)) {\n          // unnecessary swizzle\n\n          snippet = builder.format(nodeSnippet, type, output);\n        } else {\n          snippet = builder.format(\"\".concat(nodeSnippet, \".\").concat(this.components), this.getNodeType(builder), output);\n        }\n      } else {\n        // ignore .components if .node returns float/integer\n\n        snippet = node.build(builder, output);\n      }\n      return snippet;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(SplitNode.prototype), \"serialize\", this).call(this, data);\n      data.components = this.components;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(SplitNode.prototype), \"deserialize\", this).call(this, data);\n      this.components = data.components;\n    }\n  }]);\n  return SplitNode;\n}(Node);\nexport default SplitNode;\naddNodeClass('SplitNode', SplitNode);","map":{"version":3,"names":["Node","addNodeClass","vectorComponents","stringVectorComponents","join","SplitNode","_Node","_inherits","_super","_createSuper","node","_this","components","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","getVectorLength","vectorLength","_iterator","_createForOfIteratorHelper","_step","s","n","done","c","Math","max","indexOf","err","e","f","getNodeType","builder","getTypeFromLength","generate","output","nodeTypeLength","getTypeLength","snippet","type","componentsLength","nodeSnippet","build","slice","format","concat","serialize","data","_get","_getPrototypeOf","prototype","deserialize"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/utils/SplitNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { vectorComponents } from '../core/constants.js';\n\nconst stringVectorComponents = vectorComponents.join( '' );\n\nclass SplitNode extends Node {\n\n\tconstructor( node, components = 'x' ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.components = components;\n\n\t}\n\n\tgetVectorLength() {\n\n\t\tlet vectorLength = this.components.length;\n\n\t\tfor ( const c of this.components ) {\n\n\t\t\tvectorLength = Math.max( vectorComponents.indexOf( c ) + 1, vectorLength );\n\n\t\t}\n\n\t\treturn vectorLength;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn builder.getTypeFromLength( this.components.length );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst nodeTypeLength = builder.getTypeLength( node.getNodeType( builder ) );\n\n\t\tlet snippet = null;\n\n\t\tif ( nodeTypeLength > 1 ) {\n\n\t\t\tlet type = null;\n\n\t\t\tconst componentsLength = this.getVectorLength();\n\n\t\t\tif ( componentsLength >= nodeTypeLength ) {\n\n\t\t\t\t// needed expand the input node\n\n\t\t\t\ttype = builder.getTypeFromLength( this.getVectorLength() );\n\n\t\t\t}\n\n\t\t\tconst nodeSnippet = node.build( builder, type );\n\n\t\t\tif ( this.components.length === nodeTypeLength && this.components === stringVectorComponents.slice( 0, this.components.length ) ) {\n\n\t\t\t\t// unnecessary swizzle\n\n\t\t\t\tsnippet = builder.format( nodeSnippet, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = builder.format( `${nodeSnippet}.${this.components}`, this.getNodeType( builder ), output );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// ignore .components if .node returns float/integer\n\n\t\t\tsnippet = node.build( builder, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.components = this.components;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.components = data.components;\n\n\t}\n\n}\n\nexport default SplitNode;\n\naddNodeClass( 'SplitNode', SplitNode );\n"],"mappings":";;;;;;;AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,iBAAiB;AACpD,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD,IAAMC,sBAAsB,GAAGD,gBAAgB,CAACE,IAAI,CAAE,EAAG,CAAC;AAAC,IAErDC,SAAS,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAEd,SAAAA,UAAaK,IAAI,EAAqB;IAAA,IAAAC,KAAA;IAAA,IAAnBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;IAAAG,eAAA,OAAAX,SAAA;IAElCM,KAAA,GAAAH,MAAA,CAAAS,IAAA;IAEAN,KAAA,CAAKD,IAAI,GAAGA,IAAI;IAChBC,KAAA,CAAKC,UAAU,GAAGA,UAAU;IAAC,OAAAD,KAAA;EAE9B;EAACO,YAAA,CAAAb,SAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAC,gBAAA,EAAkB;MAEjB,IAAIC,YAAY,GAAG,IAAI,CAACV,UAAU,CAACE,MAAM;MAAC,IAAAS,SAAA,GAAAC,0BAAA,CAEzB,IAAI,CAACZ,UAAU;QAAAa,KAAA;MAAA;QAAhC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAmC;UAAA,IAAvBC,CAAC,GAAAJ,KAAA,CAAAL,KAAA;UAEZE,YAAY,GAAGQ,IAAI,CAACC,GAAG,CAAE7B,gBAAgB,CAAC8B,OAAO,CAAEH,CAAE,CAAC,GAAG,CAAC,EAAEP,YAAa,CAAC;QAE3E;MAAC,SAAAW,GAAA;QAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;MAAA;QAAAV,SAAA,CAAAY,CAAA;MAAA;MAED,OAAOb,YAAY;IAEpB;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAgB,YAAaC,OAAO,EAAG;MAEtB,OAAOA,OAAO,CAACC,iBAAiB,CAAE,IAAI,CAAC1B,UAAU,CAACE,MAAO,CAAC;IAE3D;EAAC;IAAAK,GAAA;IAAAC,KAAA,EAED,SAAAmB,SAAUF,OAAO,EAAEG,MAAM,EAAG;MAE3B,IAAM9B,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAM+B,cAAc,GAAGJ,OAAO,CAACK,aAAa,CAAEhC,IAAI,CAAC0B,WAAW,CAAEC,OAAQ,CAAE,CAAC;MAE3E,IAAIM,OAAO,GAAG,IAAI;MAElB,IAAKF,cAAc,GAAG,CAAC,EAAG;QAEzB,IAAIG,IAAI,GAAG,IAAI;QAEf,IAAMC,gBAAgB,GAAG,IAAI,CAACxB,eAAe,CAAC,CAAC;QAE/C,IAAKwB,gBAAgB,IAAIJ,cAAc,EAAG;UAEzC;;UAEAG,IAAI,GAAGP,OAAO,CAACC,iBAAiB,CAAE,IAAI,CAACjB,eAAe,CAAC,CAAE,CAAC;QAE3D;QAEA,IAAMyB,WAAW,GAAGpC,IAAI,CAACqC,KAAK,CAAEV,OAAO,EAAEO,IAAK,CAAC;QAE/C,IAAK,IAAI,CAAChC,UAAU,CAACE,MAAM,KAAK2B,cAAc,IAAI,IAAI,CAAC7B,UAAU,KAAKT,sBAAsB,CAAC6C,KAAK,CAAE,CAAC,EAAE,IAAI,CAACpC,UAAU,CAACE,MAAO,CAAC,EAAG;UAEjI;;UAEA6B,OAAO,GAAGN,OAAO,CAACY,MAAM,CAAEH,WAAW,EAAEF,IAAI,EAAEJ,MAAO,CAAC;QAEtD,CAAC,MAAM;UAENG,OAAO,GAAGN,OAAO,CAACY,MAAM,IAAAC,MAAA,CAAKJ,WAAW,OAAAI,MAAA,CAAI,IAAI,CAACtC,UAAU,GAAI,IAAI,CAACwB,WAAW,CAAEC,OAAQ,CAAC,EAAEG,MAAO,CAAC;QAErG;MAED,CAAC,MAAM;QAEN;;QAEAG,OAAO,GAAGjC,IAAI,CAACqC,KAAK,CAAEV,OAAO,EAAEG,MAAO,CAAC;MAExC;MAEA,OAAOG,OAAO;IAEf;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EAED,SAAA+B,UAAWC,IAAI,EAAG;MAEjBC,IAAA,CAAAC,eAAA,CAAAjD,SAAA,CAAAkD,SAAA,sBAAAtC,IAAA,OAAiBmC,IAAI;MAErBA,IAAI,CAACxC,UAAU,GAAG,IAAI,CAACA,UAAU;IAElC;EAAC;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAoC,YAAaJ,IAAI,EAAG;MAEnBC,IAAA,CAAAC,eAAA,CAAAjD,SAAA,CAAAkD,SAAA,wBAAAtC,IAAA,OAAmBmC,IAAI;MAEvB,IAAI,CAACxC,UAAU,GAAGwC,IAAI,CAACxC,UAAU;IAElC;EAAC;EAAA,OAAAP,SAAA;AAAA,EA5FsBL,IAAI;AAgG5B,eAAeK,SAAS;AAExBJ,YAAY,CAAE,WAAW,EAAEI,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}