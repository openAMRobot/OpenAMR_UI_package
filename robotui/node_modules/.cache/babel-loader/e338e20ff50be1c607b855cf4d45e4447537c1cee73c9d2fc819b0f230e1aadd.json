{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport ContextNode from '../core/ContextNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\nvar LightingContextNode = /*#__PURE__*/function (_ContextNode) {\n  _inherits(LightingContextNode, _ContextNode);\n  var _super = _createSuper(LightingContextNode);\n  function LightingContextNode(node) {\n    var _this;\n    var lightingModel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var backdropNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var backdropAlphaNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, LightingContextNode);\n    _this = _super.call(this, node);\n    _this.lightingModel = lightingModel;\n    _this.backdropNode = backdropNode;\n    _this.backdropAlphaNode = backdropAlphaNode;\n    return _this;\n  }\n  _createClass(LightingContextNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType( /*builder*/\n    ) {\n      return 'vec3';\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      var lightingModel = this.lightingModel,\n        backdropNode = this.backdropNode,\n        backdropAlphaNode = this.backdropAlphaNode;\n      var context = this.context = {}; // reset context\n      var properties = builder.getNodeProperties(this);\n      var directDiffuse = vec3().temp(),\n        directSpecular = vec3().temp(),\n        indirectDiffuse = vec3().temp(),\n        indirectSpecular = vec3().temp();\n      var totalDiffuse = add(directDiffuse, indirectDiffuse);\n      if (backdropNode !== null) {\n        totalDiffuse = vec3(backdropAlphaNode !== null ? mix(totalDiffuse, backdropNode, backdropAlphaNode) : backdropNode);\n      }\n      var totalSpecular = add(directSpecular, indirectSpecular);\n      var total = add(totalDiffuse, totalSpecular).temp();\n      var reflectedLight = {\n        directDiffuse: directDiffuse,\n        directSpecular: directSpecular,\n        indirectDiffuse: indirectDiffuse,\n        indirectSpecular: indirectSpecular,\n        total: total\n      };\n      var lighting = {\n        radiance: vec3().temp(),\n        irradiance: vec3().temp(),\n        iblIrradiance: vec3().temp(),\n        ambientOcclusion: float(1).temp()\n      };\n      context.reflectedLight = reflectedLight;\n      context.lightingModel = lightingModel || context.lightingModel;\n      Object.assign(properties, reflectedLight, lighting);\n      Object.assign(context, lighting);\n      if (lightingModel) {\n        lightingModel.init(context, builder.stack, builder);\n        lightingModel.indirectDiffuse(context, builder.stack, builder);\n        lightingModel.indirectSpecular(context, builder.stack, builder);\n        lightingModel.ambientOcclusion(context, builder.stack, builder);\n      }\n      return _get(_getPrototypeOf(LightingContextNode.prototype), \"setup\", this).call(this, builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var context = this.context;\n      var type = this.getNodeType(builder);\n      _get(_getPrototypeOf(LightingContextNode.prototype), \"generate\", this).call(this, builder, type);\n      return context.reflectedLight.total.build(builder, type);\n    }\n  }]);\n  return LightingContextNode;\n}(ContextNode);\nexport default LightingContextNode;\nexport var lightingContext = nodeProxy(LightingContextNode);\naddNodeElement('lightingContext', lightingContext);\naddNodeClass('LightingContextNode', LightingContextNode);","map":{"version":3,"names":["ContextNode","add","mix","addNodeClass","addNodeElement","nodeProxy","float","vec3","LightingContextNode","_ContextNode","_inherits","_super","_createSuper","node","_this","lightingModel","arguments","length","undefined","backdropNode","backdropAlphaNode","_classCallCheck","call","_createClass","key","value","getNodeType","setup","builder","context","properties","getNodeProperties","directDiffuse","temp","directSpecular","indirectDiffuse","indirectSpecular","totalDiffuse","totalSpecular","total","reflectedLight","lighting","radiance","irradiance","iblIrradiance","ambientOcclusion","Object","assign","init","stack","_get","_getPrototypeOf","prototype","generate","type","build","lightingContext"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/lighting/LightingContextNode.js"],"sourcesContent":["import ContextNode from '../core/ContextNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass LightingContextNode extends ContextNode {\n\n\tconstructor( node, lightingModel = null, backdropNode = null, backdropAlphaNode = null ) {\n\n\t\tsuper( node );\n\n\t\tthis.lightingModel = lightingModel;\n\t\tthis.backdropNode = backdropNode;\n\t\tthis.backdropAlphaNode = backdropAlphaNode;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\treturn 'vec3';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { lightingModel, backdropNode, backdropAlphaNode } = this;\n\n\t\tconst context = this.context = {}; // reset context\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst directDiffuse = vec3().temp(),\n\t\t\tdirectSpecular = vec3().temp(),\n\t\t\tindirectDiffuse = vec3().temp(),\n\t\t\tindirectSpecular = vec3().temp();\n\n\t\tlet totalDiffuse = add( directDiffuse, indirectDiffuse );\n\n\t\tif ( backdropNode !== null ) {\n\n\t\t\ttotalDiffuse = vec3( backdropAlphaNode !== null ? mix( totalDiffuse, backdropNode, backdropAlphaNode ) : backdropNode );\n\n\t\t}\n\n\t\tconst totalSpecular = add( directSpecular, indirectSpecular );\n\t\tconst total = add( totalDiffuse, totalSpecular ).temp();\n\n\t\tconst reflectedLight = {\n\t\t\tdirectDiffuse,\n\t\t\tdirectSpecular,\n\t\t\tindirectDiffuse,\n\t\t\tindirectSpecular,\n\t\t\ttotal\n\t\t};\n\n\t\tconst lighting = {\n\t\t\tradiance: vec3().temp(),\n\t\t\tirradiance: vec3().temp(),\n\t\t\tiblIrradiance: vec3().temp(),\n\t\t\tambientOcclusion: float( 1 ).temp()\n\t\t};\n\n\t\tcontext.reflectedLight = reflectedLight;\n\t\tcontext.lightingModel = lightingModel || context.lightingModel;\n\n\t\tObject.assign( properties, reflectedLight, lighting );\n\t\tObject.assign( context, lighting );\n\n\t\tif ( lightingModel ) {\n\n\t\t\tlightingModel.init( context, builder.stack, builder );\n\n\t\t\tlightingModel.indirectDiffuse( context, builder.stack, builder );\n\t\t\tlightingModel.indirectSpecular( context, builder.stack, builder );\n\t\t\tlightingModel.ambientOcclusion( context, builder.stack, builder );\n\n\t\t}\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { context } = this;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tsuper.generate( builder, type );\n\n\t\treturn context.reflectedLight.total.build( builder, type );\n\n\t}\n\n}\n\nexport default LightingContextNode;\n\nexport const lightingContext = nodeProxy( LightingContextNode );\n\naddNodeElement( 'lightingContext', lightingContext );\n\naddNodeClass( 'LightingContextNode', LightingContextNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}