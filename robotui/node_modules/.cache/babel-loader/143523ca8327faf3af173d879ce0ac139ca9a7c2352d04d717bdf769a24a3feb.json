{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { temp } from '../core/VarNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nvar TangentNode = /*#__PURE__*/function (_Node) {\n  _inherits(TangentNode, _Node);\n  var _super = _createSuper(TangentNode);\n  function TangentNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TangentNode.LOCAL;\n    _classCallCheck(this, TangentNode);\n    _this = _super.call(this);\n    _this.scope = scope;\n    return _this;\n  }\n  _createClass(TangentNode, [{\n    key: \"getHash\",\n    value: function getHash( /*builder*/\n    ) {\n      return \"tangent-\".concat(this.scope);\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      var scope = this.scope;\n      if (scope === TangentNode.GEOMETRY) {\n        return 'vec4';\n      }\n      return 'vec3';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      var outputNode = null;\n      if (scope === TangentNode.GEOMETRY) {\n        outputNode = attribute('tangent', 'vec4');\n      } else if (scope === TangentNode.LOCAL) {\n        outputNode = varying(tangentGeometry.xyz);\n      } else if (scope === TangentNode.VIEW) {\n        var vertexNode = modelViewMatrix.mul(tangentLocal).xyz;\n        outputNode = normalize(varying(vertexNode));\n      } else if (scope === TangentNode.WORLD) {\n        var _vertexNode = tangentView.transformDirection(cameraViewMatrix);\n        outputNode = normalize(varying(_vertexNode));\n      }\n      return outputNode.build(builder, this.getNodeType(builder));\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(TangentNode.prototype), \"serialize\", this).call(this, data);\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(TangentNode.prototype), \"deserialize\", this).call(this, data);\n      this.scope = data.scope;\n    }\n  }]);\n  return TangentNode;\n}(Node);\nTangentNode.GEOMETRY = 'geometry';\nTangentNode.LOCAL = 'local';\nTangentNode.VIEW = 'view';\nTangentNode.WORLD = 'world';\nexport default TangentNode;\nexport var tangentGeometry = nodeImmutable(TangentNode, TangentNode.GEOMETRY);\nexport var tangentLocal = nodeImmutable(TangentNode, TangentNode.LOCAL);\nexport var tangentView = nodeImmutable(TangentNode, TangentNode.VIEW);\nexport var tangentWorld = nodeImmutable(TangentNode, TangentNode.WORLD);\nexport var transformedTangentView = temp(tangentView, 'TransformedTangentView');\nexport var transformedTangentWorld = normalize(transformedTangentView.transformDirection(cameraViewMatrix));\naddNodeClass('TangentNode', TangentNode);","map":{"version":3,"names":["Node","addNodeClass","attribute","temp","varying","normalize","cameraViewMatrix","modelViewMatrix","nodeImmutable","TangentNode","_Node","_inherits","_super","_createSuper","_this","scope","arguments","length","undefined","LOCAL","_classCallCheck","call","_createClass","key","value","getHash","concat","getNodeType","GEOMETRY","generate","builder","outputNode","tangentGeometry","xyz","VIEW","vertexNode","mul","tangentLocal","WORLD","tangentView","transformDirection","build","serialize","data","_get","_getPrototypeOf","prototype","deserialize","tangentWorld","transformedTangentView","transformedTangentWorld"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/accessors/TangentNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { temp } from '../core/VarNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass TangentNode extends Node {\n\n\tconstructor( scope = TangentNode.LOCAL ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `tangent-${this.scope}`;\n\n\t}\n\n\tgetNodeType() {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TangentNode.GEOMETRY ) {\n\n\t\t\treturn 'vec4';\n\n\t\t}\n\n\t\treturn 'vec3';\n\n\t}\n\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === TangentNode.GEOMETRY ) {\n\n\t\t\toutputNode = attribute( 'tangent', 'vec4' );\n\n\t\t} else if ( scope === TangentNode.LOCAL ) {\n\n\t\t\toutputNode = varying( tangentGeometry.xyz );\n\n\t\t} else if ( scope === TangentNode.VIEW ) {\n\n\t\t\tconst vertexNode = modelViewMatrix.mul( tangentLocal ).xyz;\n\t\t\toutputNode = normalize( varying( vertexNode ) );\n\n\t\t} else if ( scope === TangentNode.WORLD ) {\n\n\t\t\tconst vertexNode = tangentView.transformDirection( cameraViewMatrix );\n\t\t\toutputNode = normalize( varying( vertexNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nTangentNode.GEOMETRY = 'geometry';\nTangentNode.LOCAL = 'local';\nTangentNode.VIEW = 'view';\nTangentNode.WORLD = 'world';\n\nexport default TangentNode;\n\nexport const tangentGeometry = nodeImmutable( TangentNode, TangentNode.GEOMETRY );\nexport const tangentLocal = nodeImmutable( TangentNode, TangentNode.LOCAL );\nexport const tangentView = nodeImmutable( TangentNode, TangentNode.VIEW );\nexport const tangentWorld = nodeImmutable( TangentNode, TangentNode.WORLD );\nexport const transformedTangentView = temp( tangentView, 'TransformedTangentView' );\nexport const transformedTangentWorld = normalize( transformedTangentView.transformDirection( cameraViewMatrix ) );\n\naddNodeClass( 'TangentNode', TangentNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}