{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { WebGLCubeRenderTarget, Scene, CubeCamera, BoxGeometry, Mesh, BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from 'three';\nimport { equirectUV } from '../../nodes/utils/EquirectUVNode.js';\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\nimport { positionWorldDirection } from '../../nodes/accessors/PositionNode.js';\nimport { createNodeMaterialFromType } from '../../nodes/materials/NodeMaterial.js';\n\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\nvar CubeRenderTarget = /*#__PURE__*/function (_WebGLCubeRenderTarge) {\n  _inherits(CubeRenderTarget, _WebGLCubeRenderTarge);\n  var _super = _createSuper(CubeRenderTarget);\n  function CubeRenderTarget() {\n    var _this;\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, CubeRenderTarget);\n    _this = _super.call(this, size, options);\n    _this.isCubeRenderTarget = true;\n    return _this;\n  }\n  _createClass(CubeRenderTarget, [{\n    key: \"fromEquirectangularTexture\",\n    value: function fromEquirectangularTexture(renderer, texture) {\n      var currentMinFilter = texture.minFilter;\n      var currentGenerateMipmaps = texture.generateMipmaps;\n      texture.generateMipmaps = true;\n      this.texture.type = texture.type;\n      this.texture.colorSpace = texture.colorSpace;\n      this.texture.generateMipmaps = texture.generateMipmaps;\n      this.texture.minFilter = texture.minFilter;\n      this.texture.magFilter = texture.magFilter;\n      var geometry = new BoxGeometry(5, 5, 5);\n      var uvNode = equirectUV(positionWorldDirection);\n      var material = createNodeMaterialFromType('MeshBasicNodeMaterial');\n      material.colorNode = TSL_Texture(texture, uvNode, 0);\n      material.side = BackSide;\n      material.blending = NoBlending;\n      var mesh = new Mesh(geometry, material);\n      var scene = new Scene();\n      scene.add(mesh);\n\n      // Avoid blurred poles\n      if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n      var camera = new CubeCamera(1, 10, this);\n      camera.update(renderer, scene);\n      texture.minFilter = currentMinFilter;\n      texture.currentGenerateMipmaps = currentGenerateMipmaps;\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n      return this;\n    }\n  }]);\n  return CubeRenderTarget;\n}(WebGLCubeRenderTarget);\nexport default CubeRenderTarget;","map":{"version":3,"names":["WebGLCubeRenderTarget","Scene","CubeCamera","BoxGeometry","Mesh","BackSide","NoBlending","LinearFilter","LinearMipmapLinearFilter","equirectUV","texture","TSL_Texture","positionWorldDirection","createNodeMaterialFromType","CubeRenderTarget","_WebGLCubeRenderTarge","_inherits","_super","_createSuper","_this","size","arguments","length","undefined","options","_classCallCheck","call","isCubeRenderTarget","_createClass","key","value","fromEquirectangularTexture","renderer","currentMinFilter","minFilter","currentGenerateMipmaps","generateMipmaps","type","colorSpace","magFilter","geometry","uvNode","material","colorNode","side","blending","mesh","scene","add","camera","update","dispose"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/renderers/common/CubeRenderTarget.js"],"sourcesContent":["import { WebGLCubeRenderTarget, Scene, CubeCamera, BoxGeometry, Mesh, BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from 'three';\nimport { equirectUV } from '../../nodes/utils/EquirectUVNode.js';\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\nimport { positionWorldDirection } from '../../nodes/accessors/PositionNode.js';\nimport { createNodeMaterialFromType } from '../../nodes/materials/NodeMaterial.js';\n\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\n\nclass CubeRenderTarget extends WebGLCubeRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, options );\n\n\t\tthis.isCubeRenderTarget = true;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tconst currentMinFilter = texture.minFilter;\n\t\tconst currentGenerateMipmaps = texture.generateMipmaps;\n\n\t\ttexture.generateMipmaps = true;\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst uvNode = equirectUV( positionWorldDirection );\n\n\t\tconst material = createNodeMaterialFromType( 'MeshBasicNodeMaterial' );\n\t\tmaterial.colorNode = TSL_Texture( texture, uvNode, 0 );\n\t\tmaterial.side = BackSide;\n\t\tmaterial.blending = NoBlending;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst scene = new Scene();\n\t\tscene.add( mesh );\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, scene );\n\n\t\ttexture.minFilter = currentMinFilter;\n\t\ttexture.currentGenerateMipmaps = currentGenerateMipmaps;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default CubeRenderTarget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}