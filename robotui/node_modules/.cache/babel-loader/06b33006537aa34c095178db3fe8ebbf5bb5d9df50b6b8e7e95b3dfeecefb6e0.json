{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { createNodeFromType } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { FileLoader, Loader } from 'three';\nvar NodeLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(NodeLoader, _Loader);\n  var _super = _createSuper(NodeLoader);\n  function NodeLoader(manager) {\n    var _this;\n    _classCallCheck(this, NodeLoader);\n    _this = _super.call(this, manager);\n    _this.textures = {};\n    return _this;\n  }\n  _createClass(NodeLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this2 = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(_this2.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          _this2.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parseNodes\",\n    value: function parseNodes(json) {\n      var nodes = {};\n      if (json !== undefined) {\n        var _iterator = _createForOfIteratorHelper(json),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var nodeJSON = _step.value;\n            var uuid = nodeJSON.uuid,\n              type = nodeJSON.type;\n            nodes[uuid] = nodeObject(createNodeFromType(type)); // @TODO: Maybe nodeObjectify the node in createNodeFromType?\n            nodes[uuid].uuid = uuid;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        var meta = {\n          nodes: nodes,\n          textures: this.textures\n        };\n        var _iterator2 = _createForOfIteratorHelper(json),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _nodeJSON = _step2.value;\n            _nodeJSON.meta = meta;\n            var node = nodes[_nodeJSON.uuid];\n            node.deserialize(_nodeJSON);\n            delete _nodeJSON.meta;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      return nodes;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      var node = nodeObject(createNodeFromType(json.type));\n      node.uuid = json.uuid;\n      var nodes = this.parseNodes(json.nodes);\n      var meta = {\n        nodes: nodes,\n        textures: this.textures\n      };\n      json.meta = meta;\n      node.deserialize(json);\n      delete json.meta;\n      return node;\n    }\n  }, {\n    key: \"setTextures\",\n    value: function setTextures(value) {\n      this.textures = value;\n      return this;\n    }\n  }]);\n  return NodeLoader;\n}(Loader);\nexport default NodeLoader;","map":{"version":3,"names":["createNodeFromType","nodeObject","FileLoader","Loader","NodeLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","textures","_createClass","key","value","load","url","onLoad","onProgress","onError","_this2","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","JSON","e","console","error","itemError","parseNodes","json","nodes","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","nodeJSON","uuid","type","err","f","meta","_iterator2","_step2","node","deserialize","setTextures"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/loaders/NodeLoader.js"],"sourcesContent":["import { createNodeFromType } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { FileLoader, Loader } from 'three';\n\nclass NodeLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, ( text ) => {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( this.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparseNodes( json ) {\n\n\t\tconst nodes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( const nodeJSON of json ) {\n\n\t\t\t\tconst { uuid, type } = nodeJSON;\n\n\t\t\t\tnodes[ uuid ] = nodeObject( createNodeFromType( type ) ); // @TODO: Maybe nodeObjectify the node in createNodeFromType?\n\t\t\t\tnodes[ uuid ].uuid = uuid;\n\n\t\t\t}\n\n\t\t\tconst meta = { nodes, textures: this.textures };\n\n\t\t\tfor ( const nodeJSON of json ) {\n\n\t\t\t\tnodeJSON.meta = meta;\n\n\t\t\t\tconst node = nodes[ nodeJSON.uuid ];\n\t\t\t\tnode.deserialize( nodeJSON );\n\n\t\t\t\tdelete nodeJSON.meta;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn nodes;\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst node = nodeObject( createNodeFromType( json.type ) );\n\t\tnode.uuid = json.uuid;\n\n\t\tconst nodes = this.parseNodes( json.nodes );\n\t\tconst meta = { nodes, textures: this.textures };\n\n\t\tjson.meta = meta;\n\n\t\tnode.deserialize( json );\n\n\t\tdelete json.meta;\n\n\t\treturn node;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nexport default NodeLoader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}