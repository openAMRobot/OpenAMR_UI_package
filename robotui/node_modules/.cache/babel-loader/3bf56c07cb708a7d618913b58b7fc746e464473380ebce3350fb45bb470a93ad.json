{"ast":null,"code":"import _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { modelWorldMatrix, modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nvar PositionNode = /*#__PURE__*/function (_Node) {\n  _inherits(PositionNode, _Node);\n  var _super = _createSuper(PositionNode);\n  function PositionNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PositionNode.LOCAL;\n    _classCallCheck(this, PositionNode);\n    _this = _super.call(this, 'vec3');\n    _this.scope = scope;\n    return _this;\n  }\n  _createClass(PositionNode, [{\n    key: \"isGlobal\",\n    value: function isGlobal() {\n      return true;\n    }\n  }, {\n    key: \"getHash\",\n    value: function getHash( /*builder*/\n    ) {\n      return \"position-\".concat(this.scope);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      var outputNode = null;\n      if (scope === PositionNode.GEOMETRY) {\n        outputNode = attribute('position', 'vec3');\n      } else if (scope === PositionNode.LOCAL) {\n        outputNode = varying(positionGeometry);\n      } else if (scope === PositionNode.WORLD) {\n        var vertexPositionNode = modelWorldMatrix.mul(positionLocal);\n        outputNode = varying(vertexPositionNode);\n      } else if (scope === PositionNode.VIEW) {\n        var _vertexPositionNode = modelViewMatrix.mul(positionLocal);\n        outputNode = varying(_vertexPositionNode);\n      } else if (scope === PositionNode.VIEW_DIRECTION) {\n        var _vertexPositionNode2 = positionView.negate();\n        outputNode = normalize(varying(_vertexPositionNode2));\n      } else if (scope === PositionNode.WORLD_DIRECTION) {\n        var _vertexPositionNode3 = positionLocal.transformDirection(modelWorldMatrix);\n        outputNode = normalize(varying(_vertexPositionNode3));\n      }\n      return outputNode.build(builder, this.getNodeType(builder));\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(PositionNode.prototype), \"serialize\", this).call(this, data);\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(PositionNode.prototype), \"deserialize\", this).call(this, data);\n      this.scope = data.scope;\n    }\n  }]);\n  return PositionNode;\n}(Node);\nPositionNode.GEOMETRY = 'geometry';\nPositionNode.LOCAL = 'local';\nPositionNode.WORLD = 'world';\nPositionNode.WORLD_DIRECTION = 'worldDirection';\nPositionNode.VIEW = 'view';\nPositionNode.VIEW_DIRECTION = 'viewDirection';\nexport default PositionNode;\nexport var positionGeometry = nodeImmutable(PositionNode, PositionNode.GEOMETRY);\nexport var positionLocal = nodeImmutable(PositionNode, PositionNode.LOCAL);\nexport var positionWorld = nodeImmutable(PositionNode, PositionNode.WORLD);\nexport var positionWorldDirection = nodeImmutable(PositionNode, PositionNode.WORLD_DIRECTION);\nexport var positionView = nodeImmutable(PositionNode, PositionNode.VIEW);\nexport var positionViewDirection = nodeImmutable(PositionNode, PositionNode.VIEW_DIRECTION);\naddNodeClass('PositionNode', PositionNode);","map":{"version":3,"names":["Node","addNodeClass","attribute","varying","normalize","modelWorldMatrix","modelViewMatrix","nodeImmutable","PositionNode","_Node","_inherits","_super","_createSuper","_this","scope","arguments","length","undefined","LOCAL","_classCallCheck","call","_createClass","key","value","isGlobal","getHash","concat","generate","builder","outputNode","GEOMETRY","positionGeometry","WORLD","vertexPositionNode","mul","positionLocal","VIEW","VIEW_DIRECTION","positionView","negate","WORLD_DIRECTION","transformDirection","build","getNodeType","serialize","data","_get","_getPrototypeOf","prototype","deserialize","positionWorld","positionWorldDirection","positionViewDirection"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/accessors/PositionNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { modelWorldMatrix, modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass PositionNode extends Node {\n\n\tconstructor( scope = PositionNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `position-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === PositionNode.GEOMETRY ) {\n\n\t\t\toutputNode = attribute( 'position', 'vec3' );\n\n\t\t} else if ( scope === PositionNode.LOCAL ) {\n\n\t\t\toutputNode = varying( positionGeometry );\n\n\t\t} else if ( scope === PositionNode.WORLD ) {\n\n\t\t\tconst vertexPositionNode = modelWorldMatrix.mul( positionLocal );\n\t\t\toutputNode = varying( vertexPositionNode );\n\n\t\t} else if ( scope === PositionNode.VIEW ) {\n\n\t\t\tconst vertexPositionNode = modelViewMatrix.mul( positionLocal );\n\t\t\toutputNode = varying( vertexPositionNode );\n\n\t\t} else if ( scope === PositionNode.VIEW_DIRECTION ) {\n\n\t\t\tconst vertexPositionNode = positionView.negate();\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\n\n\t\t} else if ( scope === PositionNode.WORLD_DIRECTION ) {\n\n\t\t\tconst vertexPositionNode = positionLocal.transformDirection( modelWorldMatrix );\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nPositionNode.GEOMETRY = 'geometry';\nPositionNode.LOCAL = 'local';\nPositionNode.WORLD = 'world';\nPositionNode.WORLD_DIRECTION = 'worldDirection';\nPositionNode.VIEW = 'view';\nPositionNode.VIEW_DIRECTION = 'viewDirection';\n\nexport default PositionNode;\n\nexport const positionGeometry = nodeImmutable( PositionNode, PositionNode.GEOMETRY );\nexport const positionLocal = nodeImmutable( PositionNode, PositionNode.LOCAL );\nexport const positionWorld = nodeImmutable( PositionNode, PositionNode.WORLD );\nexport const positionWorldDirection = nodeImmutable( PositionNode, PositionNode.WORLD_DIRECTION );\nexport const positionView = nodeImmutable( PositionNode, PositionNode.VIEW );\nexport const positionViewDirection = nodeImmutable( PositionNode, PositionNode.VIEW_DIRECTION );\n\naddNodeClass( 'PositionNode', PositionNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}