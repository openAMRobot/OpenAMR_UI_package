{"ast":null,"code":"import _regeneratorRuntime from\"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,createContext,useState}from\"react\";import\"./configs/normalize.css\";import\"../shared/styles/fonts.css\";import\"../shared/styles/global.css\";import\"../shared/styles/icons.css\";import{AppConfig}from\"../shared/constants\";import withProviders from\"./providers\";import Routes from\"../pages\";import{jsx as _jsx}from\"react/jsx-runtime\";export var RosContext=/*#__PURE__*/createContext(null);var App=function App(){var _useState=useState(new window.ROSLIB.Ros()),_useState2=_slicedToArray(_useState,1),ros=_useState2[0];var tryToConnect=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var currentIP,currentUrl,ip;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentIP=window.location.hostname;currentUrl=window.location.href;ip=!currentUrl.includes(\"http://localhost:3000/\")?currentIP:AppConfig.ROSBRIDGE_SERVER_IP;try{ros.connect(\"ws://\"+ip+\":\"+AppConfig.ROSBRIDGE_SERVER_PORT);}catch(err){console.log(\"Connecting error\",err);}case 4:case\"end\":return _context.stop();}},_callee);})),[ros]);var checkConnectionStatus=useCallback(function(){ros.on(\"connection\",function(){console.log(\"Connection Successful\");});ros.on(\"close\",function(){console.log(\"Connection failed, reloading...\");tryToConnect();});},[ros,tryToConnect]);useEffect(function(){tryToConnect();checkConnectionStatus();},[checkConnectionStatus,tryToConnect]);return/*#__PURE__*/_jsx(RosContext.Provider,{value:ros,children:/*#__PURE__*/_jsx(Routes,{})});};export default withProviders(App);","map":{"version":3,"names":["React","useCallback","useEffect","createContext","useState","AppConfig","withProviders","Routes","jsx","_jsx","RosContext","App","_useState","window","ROSLIB","Ros","_useState2","_slicedToArray","ros","tryToConnect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentIP","currentUrl","ip","wrap","_callee$","_context","prev","next","location","hostname","href","includes","ROSBRIDGE_SERVER_IP","connect","ROSBRIDGE_SERVER_PORT","err","console","log","stop","checkConnectionStatus","on","Provider","value","children"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/src/app/App.jsx"],"sourcesContent":["import React, { useCallback, useEffect, createContext, useState } from \"react\";\n\nimport \"./configs/normalize.css\";\nimport \"../shared/styles/fonts.css\";\nimport \"../shared/styles/global.css\";\nimport \"../shared/styles/icons.css\";\n\nimport { AppConfig } from \"../shared/constants\";\n\nimport withProviders from \"./providers\";\nimport Routes from \"../pages\";\n\nexport const RosContext = createContext(null);\n\nconst App = () => {\n  const [ros] = useState(new window.ROSLIB.Ros());\n\n  const tryToConnect = useCallback(async () => {\n    const currentIP = window.location.hostname;\n    const currentUrl = window.location.href;\n    const ip = !currentUrl.includes(\"http://localhost:3000/\")\n      ? currentIP\n      : AppConfig.ROSBRIDGE_SERVER_IP;\n    try {\n      ros.connect(\"ws://\" + ip + \":\" + AppConfig.ROSBRIDGE_SERVER_PORT);\n    } catch (err) {\n      console.log(\"Connecting error\", err);\n    }\n  }, [ros]);\n\n  const checkConnectionStatus = useCallback(() => {\n    ros.on(\"connection\", () => {\n      console.log(\"Connection Successful\");\n    });\n\n    ros.on(\"close\", () => {\n      console.log(\"Connection failed, reloading...\");\n      tryToConnect();\n    });\n  }, [ros, tryToConnect]);\n\n  useEffect(() => {\n    tryToConnect();\n    checkConnectionStatus();\n  }, [checkConnectionStatus, tryToConnect]);\n\n  return (\n    <RosContext.Provider value={ros}>\n      <Routes />\n    </RosContext.Provider>\n  );\n};\n\nexport default withProviders(App);\n"],"mappings":"8aAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,SAAS,CAAEC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAE9E,MAAO,yBAAyB,CAChC,MAAO,4BAA4B,CACnC,MAAO,6BAA6B,CACpC,MAAO,4BAA4B,CAEnC,OAASC,SAAS,KAAQ,qBAAqB,CAE/C,MAAO,CAAAC,aAAa,KAAM,aAAa,CACvC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9B,MAAO,IAAM,CAAAC,UAAU,cAAGP,aAAa,CAAC,IAAI,CAAC,CAE7C,GAAM,CAAAQ,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,IAAAC,SAAA,CAAcR,QAAQ,CAAC,GAAI,CAAAS,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAL,SAAA,IAAxCM,GAAG,CAAAF,UAAA,IAEV,GAAM,CAAAG,YAAY,CAAGlB,WAAW,cAAAmB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAA,MAAAC,SAAA,CAAAC,UAAA,CAAAC,EAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACzBP,SAAS,CAAGX,MAAM,CAACmB,QAAQ,CAACC,QAAQ,CACpCR,UAAU,CAAGZ,MAAM,CAACmB,QAAQ,CAACE,IAAI,CACjCR,EAAE,CAAG,CAACD,UAAU,CAACU,QAAQ,CAAC,wBAAwB,CAAC,CACrDX,SAAS,CACTnB,SAAS,CAAC+B,mBAAmB,CACjC,GAAI,CACFlB,GAAG,CAACmB,OAAO,CAAC,OAAO,CAAGX,EAAE,CAAG,GAAG,CAAGrB,SAAS,CAACiC,qBAAqB,CAAC,CACnE,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEF,GAAG,CAAC,CACtC,CAAC,wBAAAV,QAAA,CAAAa,IAAA,MAAAnB,OAAA,GACF,GAAE,CAACL,GAAG,CAAC,CAAC,CAET,GAAM,CAAAyB,qBAAqB,CAAG1C,WAAW,CAAC,UAAM,CAC9CiB,GAAG,CAAC0B,EAAE,CAAC,YAAY,CAAE,UAAM,CACzBJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACtC,CAAC,CAAC,CAEFvB,GAAG,CAAC0B,EAAE,CAAC,OAAO,CAAE,UAAM,CACpBJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9CtB,YAAY,CAAC,CAAC,CAChB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACD,GAAG,CAAEC,YAAY,CAAC,CAAC,CAEvBjB,SAAS,CAAC,UAAM,CACdiB,YAAY,CAAC,CAAC,CACdwB,qBAAqB,CAAC,CAAC,CACzB,CAAC,CAAE,CAACA,qBAAqB,CAAExB,YAAY,CAAC,CAAC,CAEzC,mBACEV,IAAA,CAACC,UAAU,CAACmC,QAAQ,EAACC,KAAK,CAAE5B,GAAI,CAAA6B,QAAA,cAC9BtC,IAAA,CAACF,MAAM,GAAE,CAAC,CACS,CAAC,CAE1B,CAAC,CAED,cAAe,CAAAD,aAAa,CAACK,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}