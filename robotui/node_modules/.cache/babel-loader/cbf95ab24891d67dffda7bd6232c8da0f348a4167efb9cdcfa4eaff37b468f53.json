{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar NodeKeywords = /*#__PURE__*/function () {\n  function NodeKeywords() {\n    _classCallCheck(this, NodeKeywords);\n    this.keywords = [];\n    this.nodes = [];\n    this.keywordsCallback = {};\n  }\n  _createClass(NodeKeywords, [{\n    key: \"getNode\",\n    value: function getNode(name) {\n      var node = this.nodes[name];\n      if (node === undefined && this.keywordsCallback[name] !== undefined) {\n        node = this.keywordsCallback[name](name);\n        this.nodes[name] = node;\n      }\n      return node;\n    }\n  }, {\n    key: \"addKeyword\",\n    value: function addKeyword(name, callback) {\n      this.keywords.push(name);\n      this.keywordsCallback[name] = callback;\n      return this;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(code) {\n      var keywordNames = this.keywords;\n      var regExp = new RegExp(\"\\\\b\".concat(keywordNames.join('\\\\b|\\\\b'), \"\\\\b\"), 'g');\n      var codeKeywords = code.match(regExp);\n      var keywordNodes = [];\n      if (codeKeywords !== null) {\n        var _iterator = _createForOfIteratorHelper(codeKeywords),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var keyword = _step.value;\n            var node = this.getNode(keyword);\n            if (node !== undefined && keywordNodes.indexOf(node) === -1) {\n              keywordNodes.push(node);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return keywordNodes;\n    }\n  }, {\n    key: \"include\",\n    value: function include(builder, code) {\n      var keywordNodes = this.parse(code);\n      var _iterator2 = _createForOfIteratorHelper(keywordNodes),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var keywordNode = _step2.value;\n          keywordNode.build(builder);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n  return NodeKeywords;\n}();\nexport default NodeKeywords;","map":{"version":3,"names":["NodeKeywords","_classCallCheck","keywords","nodes","keywordsCallback","_createClass","key","value","getNode","name","node","undefined","addKeyword","callback","push","parse","code","keywordNames","regExp","RegExp","concat","join","codeKeywords","match","keywordNodes","_iterator","_createForOfIteratorHelper","_step","s","n","done","keyword","indexOf","err","e","f","include","builder","_iterator2","_step2","keywordNode","build"],"sources":["/home/darkadius/ros2_ws/src/BotshareWIP/ROS2/robotui/node_modules/three/examples/jsm/nodes/core/NodeKeywords.js"],"sourcesContent":["class NodeKeywords {\n\n\tconstructor() {\n\n\t\tthis.keywords = [];\n\t\tthis.nodes = [];\n\t\tthis.keywordsCallback = {};\n\n\t}\n\n\tgetNode( name ) {\n\n\t\tlet node = this.nodes[ name ];\n\n\t\tif ( node === undefined && this.keywordsCallback[ name ] !== undefined ) {\n\n\t\t\tnode = this.keywordsCallback[ name ]( name );\n\n\t\t\tthis.nodes[ name ] = node;\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\taddKeyword( name, callback ) {\n\n\t\tthis.keywords.push( name );\n\t\tthis.keywordsCallback[ name ] = callback;\n\n\t\treturn this;\n\n\t}\n\n\tparse( code ) {\n\n\t\tconst keywordNames = this.keywords;\n\n\t\tconst regExp = new RegExp( `\\\\b${keywordNames.join( '\\\\b|\\\\b' )}\\\\b`, 'g' );\n\n\t\tconst codeKeywords = code.match( regExp );\n\n\t\tconst keywordNodes = [];\n\n\t\tif ( codeKeywords !== null ) {\n\n\t\t\tfor ( const keyword of codeKeywords ) {\n\n\t\t\t\tconst node = this.getNode( keyword );\n\n\t\t\t\tif ( node !== undefined && keywordNodes.indexOf( node ) === - 1 ) {\n\n\t\t\t\t\tkeywordNodes.push( node );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keywordNodes;\n\n\t}\n\n\tinclude( builder, code ) {\n\n\t\tconst keywordNodes = this.parse( code );\n\n\t\tfor ( const keywordNode of keywordNodes ) {\n\n\t\t\tkeywordNode.build( builder );\n\n\t\t}\n\n\t}\n\n}\n\nexport default NodeKeywords;\n"],"mappings":";;;IAAMA,YAAY;EAEjB,SAAAA,aAAA,EAAc;IAAAC,eAAA,OAAAD,YAAA;IAEb,IAAI,CAACE,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;EAE3B;EAACC,YAAA,CAAAL,YAAA;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAC,QAASC,IAAI,EAAG;MAEf,IAAIC,IAAI,GAAG,IAAI,CAACP,KAAK,CAAEM,IAAI,CAAE;MAE7B,IAAKC,IAAI,KAAKC,SAAS,IAAI,IAAI,CAACP,gBAAgB,CAAEK,IAAI,CAAE,KAAKE,SAAS,EAAG;QAExED,IAAI,GAAG,IAAI,CAACN,gBAAgB,CAAEK,IAAI,CAAE,CAAEA,IAAK,CAAC;QAE5C,IAAI,CAACN,KAAK,CAAEM,IAAI,CAAE,GAAGC,IAAI;MAE1B;MAEA,OAAOA,IAAI;IAEZ;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAK,WAAYH,IAAI,EAAEI,QAAQ,EAAG;MAE5B,IAAI,CAACX,QAAQ,CAACY,IAAI,CAAEL,IAAK,CAAC;MAC1B,IAAI,CAACL,gBAAgB,CAAEK,IAAI,CAAE,GAAGI,QAAQ;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAQ,MAAOC,IAAI,EAAG;MAEb,IAAMC,YAAY,GAAG,IAAI,CAACf,QAAQ;MAElC,IAAMgB,MAAM,GAAG,IAAIC,MAAM,OAAAC,MAAA,CAAQH,YAAY,CAACI,IAAI,CAAE,SAAU,CAAC,UAAO,GAAI,CAAC;MAE3E,IAAMC,YAAY,GAAGN,IAAI,CAACO,KAAK,CAAEL,MAAO,CAAC;MAEzC,IAAMM,YAAY,GAAG,EAAE;MAEvB,IAAKF,YAAY,KAAK,IAAI,EAAG;QAAA,IAAAG,SAAA,GAAAC,0BAAA,CAELJ,YAAY;UAAAK,KAAA;QAAA;UAAnC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAsC;YAAA,IAA1BC,OAAO,GAAAJ,KAAA,CAAApB,KAAA;YAElB,IAAMG,IAAI,GAAG,IAAI,CAACF,OAAO,CAAEuB,OAAQ,CAAC;YAEpC,IAAKrB,IAAI,KAAKC,SAAS,IAAIa,YAAY,CAACQ,OAAO,CAAEtB,IAAK,CAAC,KAAK,CAAE,CAAC,EAAG;cAEjEc,YAAY,CAACV,IAAI,CAAEJ,IAAK,CAAC;YAE1B;UAED;QAAC,SAAAuB,GAAA;UAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;QAAA;UAAAR,SAAA,CAAAU,CAAA;QAAA;MAEF;MAEA,OAAOX,YAAY;IAEpB;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EAED,SAAA6B,QAASC,OAAO,EAAErB,IAAI,EAAG;MAExB,IAAMQ,YAAY,GAAG,IAAI,CAACT,KAAK,CAAEC,IAAK,CAAC;MAAC,IAAAsB,UAAA,GAAAZ,0BAAA,CAEbF,YAAY;QAAAe,MAAA;MAAA;QAAvC,KAAAD,UAAA,CAAAV,CAAA,MAAAW,MAAA,GAAAD,UAAA,CAAAT,CAAA,IAAAC,IAAA,GAA0C;UAAA,IAA9BU,WAAW,GAAAD,MAAA,CAAAhC,KAAA;UAEtBiC,WAAW,CAACC,KAAK,CAAEJ,OAAQ,CAAC;QAE7B;MAAC,SAAAJ,GAAA;QAAAK,UAAA,CAAAJ,CAAA,CAAAD,GAAA;MAAA;QAAAK,UAAA,CAAAH,CAAA;MAAA;IAEF;EAAC;EAAA,OAAAnC,YAAA;AAAA;AAIF,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}